{"version":3,"sources":["webpack:////home/ben/work/ngx-filemanager/dist/ngx-filemanager-client-firebase/fesm5/ngx-filemanager-client-firebase.js","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/file-system-stub.ts","webpack:///./src/app/logger.ts","webpack:///./src/app/permissions-selection.component.ts","webpack:///./src/app/test-functions-locally.component.ts","webpack:///./src/app/test-functions-remote.component.ts","webpack:///./src/app/test-stub-filesystem.component.ts","webpack:///./src/app/users-factory.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiF;AAClC;AACgC;AAC9B;AACya;AACpa;AACc;AACV;AACS;AACwC;AACjD;;AAE1D;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,sDAAsD;AACtD,SAAS,OAAO,6DAAW;AAC3B,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6CAAO;AACzC,6BAA6B,6CAAO;AACpC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kDAAkD,4BAA4B;AAC9E;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gDAAgD,4BAA4B;AAC5E;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,6CAA6C,yEAAyE;AACtH;AACA;AACA;AACA;AACA,kBAAkB,gEAAS,kBAAkB,0DAAG;AAChD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS,IAAI,mEAAY;AACzB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gCAAgC,QAAQ,uDAAS;AACjD,mBAAmB,yDAAW;AAC9B;AACA;AACA,aAAa;AACb,SAAS,EAAE,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uHAAuH,yBAAyB;AAChJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA,0DAA0D,+BAA+B;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,2DAAI;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA,gEAAgE,mBAAmB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA,wDAAwD,mDAAmD;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA,oDAAoD,+BAA+B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA,sDAAsD,uCAAuC;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA,oDAAoD,+BAA+B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA,8DAA8D,aAAa;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA,4DAA4D,iCAAiC;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA,4DAA4D,iCAAiC;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA,sDAAsD,eAAe;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA,oEAAoE,2DAAI;AACxE;AACA;AACA,qCAAqC,+DAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,gCAAgC,EAAE;AACxD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA,gCAAgC,sDAAQ;AACxC;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,8DAA8D;AAC9D,SAAS,sBAAsB;AAC/B,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,EAAE,OAAO;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,kBAAkB,eAAe;AACjC;AACA,SAAS,uDAAuD;AAChE,SAAS,uCAAuC;AAChD,SAAS,+DAA+D;AACxE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,SAAS,mEAAmE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS,qDAAqD;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS,uEAAuE;AAChF,SAAS;AACT;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C,qBAAqB,sBAAsB;AAC3C;AACA,aAAa,gEAAgE;AAC7E,aAAa,wEAAwE;AACrF;AACA;AACA;AACA,aAAa;AACb,aAAa,uEAAuE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa,6DAA6D;AAC1E,aAAa,qDAAqD;AAClE;AACA;AACA;AACA,aAAa;AACb,aAAa,sDAAsD;AACnE,aAAa,0DAA0D;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa,2DAA2D;AACxE,aAAa,2CAA2C;AACxD,aAAa,uDAAuD;AACpE,aAAa,mDAAmD;AAChE;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,aAAa,kDAAkD;AAC/D,aAAa,kDAAkD;AAC/D,aAAa,kEAAkE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa,2CAA2C;AACxD,aAAa,8CAA8C;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa,yDAAyD;AACtE,aAAa,2DAA2D;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,aAAa,mDAAmD;AAChE,aAAa,iDAAiD;AAC9D,aAAa,4DAA4D;AACzE;AACA;AACA;AACA,aAAa;AACb,aAAa,4DAA4D;AACzE,aAAa,wDAAwD;AACrE,aAAa,8DAA8D;AAC3E,aAAa,oEAAoE;AACjF,aAAa,wDAAwD;AACrE,aAAa,0DAA0D;AACvE,aAAa,qEAAqE;AAClF,aAAa,yDAAyD;AACtE,aAAa,qDAAqD;AAClE,aAAa,+DAA+D;AAC5E;AACA;AACA;AACA,aAAa;AACb,aAAa,mDAAmD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa,mDAAmD;AAChE,aAAa,kEAAkE;AAC/E;AACA;AACA;AACA,aAAa;AACb,aAAa,gEAAgE;AAC7E,aAAa,wEAAwE;AACrF,aAAa,wEAAwE;AACrF,aAAa,qDAAqD;AAClE,aAAa,sDAAsD;AACnE,aAAa,wDAAwD;AACrE,aAAa,4DAA4D;AACzE,aAAa,oEAAoE;AACjF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,aAAa,+DAA+D;AAC5E,aAAa,iDAAiD;AAC9D,aAAa,gDAAgD;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa,6CAA6C;AAC1D,aAAa,gEAAgE;AAC7E,aAAa,4DAA4D;AACzE,aAAa,qDAAqD;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,aAAa,mDAAmD;AAChE,aAAa,uEAAuE;AACpF,aAAa,wEAAwE;AACrF,aAAa,0DAA0D;AACvE,aAAa,mDAAmD;AAChE,aAAa,2CAA2C;AACxD,aAAa,4DAA4D;AACzE,aAAa,kEAAkE;AAC/E,aAAa,+CAA+C;AAC5D,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,sBAAsB,iBAAiB;AACvC,qBAAqB;AACrB,KAAK;AACL,KAAK,6BAA6B,WAAW;AAC7C;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,kBAAkB;AAClB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,kBAAkB,kBAAkB,EAAE,UAAU,EAAE;AAClD,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,kBAAkB;AAClB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,kBAAkB,uBAAuB,EAAE,UAAU,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,qBAAqB,8CAA8C,EAAE;AACrE,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,qBAAqB,kCAAkC,EAAE;AACzD,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,kBAAkB;AAClB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,kBAAkB,uBAAuB,EAAE,UAAU,EAAE;AACvD;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,CAAC;AACD,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,kCAAkC,qDAAe;AACjD,iCAAiC,qDAAe;AAChD,kCAAkC,qDAAe;AACjD;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+CAA+C,aAAa;AAC5D;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kDAAkD,4BAA4B;AAC9E;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gDAAgD,4BAA4B;AAC5E;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B,mDAAmD,yBAAyB;AAC5E;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B,gCAAgC,+DAAO;AACvC;AACA,6BAA6B,gEAAQ;AACrC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS,oCAAoC,QAAQ,yDAAW;AAC/E;AACA,SAAS,EAAE,EAAE;AACb;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS,oCAAoC,QAAQ,yDAAW;AAC/E;AACA,SAAS,EAAE,EAAE;AACb;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS,oCAAoC,QAAQ,yDAAW;AAC/E;AACA,SAAS,EAAE,EAAE;AACb;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS,oCAAoC,QAAQ,yDAAW;AAC/E;AACA,SAAS,EAAE,EAAE;AACb;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS,oCAAoC,QAAQ,yDAAW;AAC/E;AACA,SAAS,EAAE,EAAE;AACb;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS,oCAAoC,QAAQ,yDAAW;AAC/E;AACA,SAAS,EAAE,EAAE;AACb;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS,oCAAoC,QAAQ,yDAAW;AAC/E;AACA,SAAS,EAAE,EAAE;AACb;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B,gCAAgC,+DAAO;AACvC;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,8BAA8B,4BAA4B,EAAE;AAC5D;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B,gCAAgC,+DAAO;AACvC;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,qCAAqC,QAAQ,gEAAQ,WAAW,EAAE;AAClE;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,8BAA8B,+BAA+B,EAAE;AAC/D;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,2CAA2C,0DAAG;AAC9C,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,6BAA6B,EAAE,IAAI,0DAAG;AACpE,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B;AAC9B,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,6BAA6B,gCAAgC,EAAE,GAAG,EAAE,IAAI,0DAAG;AAC3E,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,2BAA2B,sDAAQ,GAAG;AACtC,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA,0CAA0C,6DAAM;AAChD,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,YAAY,EAAE,IAAI,0DAAG;AAC/C,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,gCAAgC,EAAE;AAC5D,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,0DAA0D;AAC1D,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAW;AAC1C,mBAAmB,EAAE;AACrB,mBAAmB,gEAAQ;AAC3B;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,gCAAgC,+DAAO;AACvC,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,4DAAI;AAC3B;AACA,mBAAmB,4DAAI;AACvB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,qUAAqU,oBAAoB,+CAA+C,WAAW;AACnZ,sCAAsC,eAAe,UAAU,aAAa,sBAAsB,UAAU,aAAa,mBAAmB,cAAc,mBAAmB,aAAa,0BAA0B,uBAAuB,kBAAkB,YAAY,uBAAuB,aAAa,eAAe,UAAU,gBAAgB,YAAY,WAAW,aAAa,kBAAkB,eAAe,8BAA8B,YAAY,0BAA0B,IAAI,YAAY,IAAI,SAAS;AAC5f,iBAAiB;AACjB;AACA;AACA,2DAA2D;AAC3D,SAAS,OAAO,8DAAY,EAAE;AAC9B,SAAS,gCAAgC,OAAO,oDAAM,SAAS,iEAAe,IAAI;AAClF,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,kBAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,sDAAQ;AAChC,8CAA8C,+DAAO;AACrD;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gDAAgD,0BAA0B;AAC1E;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,oNAAoN,SAAS,gLAAgL,aAAa,0mBAA0mB,YAAY;AAChhC,sCAAsC,eAAe,UAAU,aAAa,sBAAsB,UAAU,aAAa,mBAAmB,cAAc,mBAAmB,aAAa,0BAA0B,uBAAuB,kBAAkB,YAAY,uBAAuB,aAAa,eAAe,UAAU,gBAAgB,YAAY,WAAW,aAAa,kBAAkB,eAAe,8BAA8B,YAAY,0BAA0B,IAAI,YAAY,IAAI,SAAS;AAC5f,iBAAiB;AACjB;AACA;AACA,yDAAyD;AACzD,SAAS,sBAAsB;AAC/B,SAAS,OAAO,8DAAY,EAAE;AAC9B,SAAS,gCAAgC,OAAO,oDAAM,SAAS,iEAAe,IAAI;AAClF,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAW;AAC1C;AACA,qCAAqC,0DAAW;AAChD;AACA,iCAAiC,0DAAW;AAC5C,6BAA6B,6CAAO;AACpC;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,kDAAI,CAAC,0DAAG;AACvB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS,IAAI,0DAAG;AAChB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,yBAAyB,8CAA8C,yBAAyB,EAAE,EAAE;AACpG;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,2YAA2Y,aAAa,oXAAoX,UAAU,wcAAwc,eAAe,0cAA0c,eAAe,kXAAkX,UAAU;AAClkE,sCAAsC,eAAe,UAAU,aAAa,sBAAsB,UAAU,aAAa,mBAAmB,cAAc,mBAAmB,aAAa,0BAA0B,uBAAuB,kBAAkB,YAAY,uBAAuB,aAAa,eAAe,UAAU,gBAAgB,YAAY,WAAW,aAAa,kBAAkB,eAAe,8BAA8B,YAAY,0BAA0B,IAAI,YAAY,IAAI,SAAS;AAC5f,iBAAiB;AACjB;AACA;AACA,mEAAmE;AACnE,SAAS,OAAO,8DAAY,EAAE;AAC9B,SAAS,gCAAgC,OAAO,oDAAM,SAAS,iEAAe,IAAI;AAClF,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,8BAA8B,0DAAW;AACzC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,sCAAsC,eAAe,UAAU,aAAa,sBAAsB,UAAU,aAAa,mBAAmB,cAAc,mBAAmB,aAAa,0BAA0B,uBAAuB,kBAAkB,YAAY,uBAAuB,aAAa,eAAe,UAAU,gBAAgB,YAAY,WAAW,aAAa,kBAAkB,eAAe,8BAA8B,YAAY,0BAA0B,IAAI,YAAY,IAAI,SAAS;AAC5f,iBAAiB;AACjB;AACA;AACA,8DAA8D;AAC9D,SAAS,OAAO,8DAAY;AAC5B,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,+CAA+C,6BAA6B;AAC5E;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,6CAA6C,6BAA6B;AAC1E;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,yDAAyD,iBAAiB;AAC1E;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,8PAA8P,oBAAoB;AAClR,sCAAsC,eAAe,UAAU,aAAa,sBAAsB,UAAU,aAAa,mBAAmB,cAAc,mBAAmB,aAAa,0BAA0B,uBAAuB,kBAAkB,YAAY,uBAAuB,aAAa,eAAe,UAAU,gBAAgB,YAAY,WAAW,aAAa,kBAAkB,eAAe,8BAA8B,YAAY,0BAA0B,IAAI,YAAY,IAAI,SAAS;AAC5f,iBAAiB;AACjB;AACA;AACA,gEAAgE;AAChE,SAAS,sBAAsB;AAC/B,SAAS,4BAA4B;AACrC,SAAS,OAAO,8DAAY,EAAE;AAC9B,SAAS,gCAAgC,OAAO,oDAAM,SAAS,iEAAe,IAAI;AAClF,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B,6DAA6D,2DAAI;AACjE,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,0CAA0C,0DAAG;AAC7C,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,uCAAuC,EAAE;AACnE,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA,sDAAsD,aAAa;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,uDAAuD,iBAAiB;AACxE;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA,sCAAsC,mBAAmB,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,iBAAiB;AAC9E;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,6CAA6C;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA,sCAAsC,mBAAmB,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,iBAAiB;AAC9E;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA,sCAAsC,mBAAmB,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,iBAAiB;AACxF;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA,sCAAsC,mBAAmB,EAAE;AAC3D,4DAA4D,2CAA2C;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,iBAAiB;AAChF;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B,kEAAkE,yBAAyB;AAC3F;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,4DAAI;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA,8DAA8D,uBAAuB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,sCAAsC,2DAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,wDAAwD;AACxD,SAAS,gCAAgC;AACzC,SAAS,oCAAoC;AAC7C,SAAS,OAAO,2DAAS,EAAE;AAC3B,SAAS,sBAAsB;AAC/B,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qDAAe;AAChD,yCAAyC,6CAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA,sCAAsC,QAAQ,uDAAS,qCAAqC,QAAQ,yDAAW;AAC/G;AACA,qBAAqB,EAAE,EAAE,EAAE,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA,qCAAqC,QAAQ,uDAAS,qCAAqC,QAAQ,yDAAW;AAC9G;AACA,qBAAqB,EAAE,EAAE,EAAE,EAAE;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA,qCAAqC,QAAQ,uDAAS,qCAAqC,QAAQ,yDAAW;AAC9G;AACA,qBAAqB,EAAE,EAAE,EAAE,EAAE;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA,qCAAqC,QAAQ,uDAAS,qCAAqC,QAAQ,yDAAW;AAC9G;AACA,qBAAqB,EAAE,EAAE,EAAE,EAAE;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA,qCAAqC,QAAQ,uDAAS,qCAAqC,QAAQ,yDAAW;AAC9G;AACA,qBAAqB,EAAE,EAAE,EAAE,EAAE;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA,qCAAqC,QAAQ,uDAAS,qCAAqC,QAAQ,yDAAW;AAC9G;AACA,qBAAqB,EAAE,EAAE,EAAE,EAAE;AAC7B;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,6BAA6B,QAAQ,uDAAS;AAC9C,uBAAuB,yDAAW;AAClC,kEAAkE,aAAa;AAC/E;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,EAAE,EAAE;AACjB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,oDAAoD,aAAa;AACjE;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA,yEAAyE,2DAAI;AAC7E;AACA;AACA,yCAAyC,sDAAQ;AACjD,6DAA6D,iCAAiC;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA,yEAAyE,2DAAI;AAC7E;AACA;AACA,6DAA6D,qBAAqB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA,yEAAyE,2DAAI;AAC7E;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA,qEAAqE,2DAAI;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA,kDAAkD,mBAAmB;AACrE;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,uBAAuB,iBAAiB,WAAW,YAAY,qBAAqB,WAAW,gBAAgB,yBAAyB,aAAa,oBAAoB,2BAA2B,QAAQ,MAAM,aAAa,mBAAmB,UAAU,eAAe,eAAe,yBAAyB,+CAA+C,cAAc,UAAU,WAAW,wBAAwB,kBAAkB,gBAAgB,YAAY,WAAW,UAAU,mBAAmB,MAAM,QAAQ,UAAU,YAAY,iCAAiC,yBAAyB,WAAW,gCAAgC,wBAAwB,QAAQ,aAAa,mBAAmB,mBAAmB,eAAe,8BAA8B,WAAW,iBAAiB,YAAY,eAAe,UAAU,aAAa,sBAAsB,UAAU,aAAa,mBAAmB,cAAc,mBAAmB,aAAa,0BAA0B,uBAAuB,kBAAkB,YAAY,uBAAuB,aAAa,eAAe,UAAU,gBAAgB,YAAY,WAAW,aAAa,kBAAkB,eAAe,8BAA8B,YAAY,0BAA0B,IAAI,YAAY,IAAI,SAAS;AACjyC,iBAAiB;AACjB;AACA;AACA,0DAA0D;AAC1D,SAAS,8BAA8B;AACvC,SAAS;AACT,MAAM;AACN;AACA,sBAAsB,OAAO,mDAAK,EAAE;AACpC,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,uDAAS;AACpB,eAAe,yDAAW;AAC1B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,oCAAoC,gCAAgC,EAAE;AACtE,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C,iCAAiC,0DAAY;AAC7C,iCAAiC,0DAAY;AAC7C,yCAAyC,0DAAY;AACrD;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,iBAAiB;AAClF;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,+xBAA+xB,aAAa,oTAAoT,wBAAwB,4CAA4C,6BAA6B,gfAAgf,eAAe,gJAAgJ,eAAe,gJAAgJ,eAAe,4EAA4E,iBAAiB,gIAAgI,0BAA0B;AACrvE,iDAAiD,sBAAsB,8BAA8B,SAAS,wBAAwB,sBAAsB,6BAA6B,sBAAsB,4BAA4B,SAAS,kCAAkC,kCAAkC,SAAS,YAAY,sBAAsB,SAAS,YAAY,sBAAsB,yBAAyB,oCAAoC,8BAA8B,8BAA8B,SAAS,aAAa,0BAA0B,4BAA4B,SAAS,kBAAkB,qBAAqB,iCAAiC,SAAS,iBAAiB,qBAAqB,sBAAsB,2BAA2B,SAAS,kBAAkB,eAAe,UAAU,aAAa,sBAAsB,UAAU,aAAa,mBAAmB,cAAc,mBAAmB,aAAa,0BAA0B,uBAAuB,kBAAkB,YAAY,uBAAuB,aAAa,eAAe,UAAU,gBAAgB,YAAY,WAAW,aAAa,kBAAkB,eAAe,8BAA8B,YAAY,0BAA0B,IAAI,YAAY,IAAI,SAAS;AACrvC,iBAAiB;AACjB;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,sBAAsB,OAAO,mDAAK,EAAE;AACpC,2BAA2B,OAAO,oDAAM,EAAE;AAC1C,yBAAyB,OAAO,oDAAM,EAAE;AACxC,yBAAyB,OAAO,oDAAM,EAAE;AACxC,iCAAiC,OAAO,oDAAM,EAAE;AAChD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mCAAmC,eAAe;AAClD,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,kDAAI,UAAU,mBAAmB;AACjD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,0DAA0D,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kBAAkB,sDAAQ,GAAG,iCAAiC,aAAa;AAC3E;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kBAAkB,sDAAQ,GAAG,yCAAyC,mBAAmB;AACzF;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kBAAkB,sDAAQ,GAAG,iCAAiC,mDAAmD;AACjH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kBAAkB,sDAAQ,GAAG,iCAAiC,kCAAkC;AAChG;AACA;AACA;AACA,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yB,SAAS,qTAAqT,YAAY,+IAA+I,uBAAuB,+IAA+I,4BAA4B;AAC15B,6CAA6C,uBAAuB,SAAS,qBAAqB,oCAAoC,gCAAgC,SAAS;AAC/K,iBAAiB;AACjB;AACA;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,2BAA2B,OAAO,oDAAM,EAAE;AAC1C;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,kBAAkB,YAAY,EAAE;AAChC;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,gEAAQ;AACjC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,+DAAO;AAChC;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD,WAAW,EAAE;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;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AAC5a,8CAA8C,sBAAsB,SAAS;AAC7E,iBAAiB;AACjB;AACA;AACA,sBAAsB,OAAO,mDAAK,EAAE;AACpC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,qBAAqB,OAAO,oDAAM,EAAE;AACpC,yBAAyB,OAAO,oDAAM,EAAE;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,qCAAqC,0DAAY;AACjD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,6BAA6B,QAAQ,uDAAS;AAC9C,uBAAuB,yDAAW;AAClC;AACA;AACA,0EAA0E,aAAa;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,EAAE,EAAE;AACjB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB,mBAAmB,yDAAW;AAC9B;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,2TAA2T,iBAAiB,yBAAyB,kBAAkB,0CAA0C,kBAAkB,yBAAyB,SAAS,wXAAwX,YAAY,+IAA+I,uBAAuB,+IAA+I,4BAA4B;AAC1qC;AACA;AACA;AACA;AACA;AACA,6CAA6C,uBAAuB,SAAS,qBAAqB,oCAAoC,gC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","file":"main.js","sourcesContent":["import { take, takeUntil, debounceTime, tap, map, filter } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AutoTableModule } from 'ngx-auto-table';\nimport { MatSnackBar, MatDialogRef, MAT_DIALOG_DATA, MatDialog, MatAutocompleteModule, MatButtonModule, MatButtonToggleModule, MatCheckboxModule, MatFormFieldModule, MatIconModule, MatInputModule, MatMenuModule, MatPaginatorModule, MatProgressBarModule, MatProgressSpinnerModule, MatSelectModule, MatSortModule, MatTableModule, MatToolbarModule, MatTooltipModule, MatSidenavModule, MatDialogModule, MatTabsModule, MatCardModule, MatSnackBarModule } from '@angular/material';\nimport { DropzoneModule } from 'ngx-dropzone-wrapper';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { dirname, basename, join } from 'path-browserify';\nimport { __spread, __awaiter, __generator, __assign } from 'tslib';\nimport { Injectable, Component, Inject, Input, Output, EventEmitter, Pipe, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, pipe, of } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar LoggerService = /** @class */ (function () {\n    function LoggerService() {\n    }\n    LoggerService.decorators = [\n        { type: Injectable }\n    ];\n    return LoggerService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NotificationService = /** @class */ (function () {\n    function NotificationService(matSnackbar) {\n        this.matSnackbar = matSnackbar;\n    }\n    /**\n     * @param {?} msg\n     * @param {?=} title\n     * @param {?=} isError\n     * @return {?}\n     */\n    NotificationService.prototype.notify = /**\n     * @param {?} msg\n     * @param {?=} title\n     * @param {?=} isError\n     * @return {?}\n     */\n    function (msg, title, isError) {\n        return this.matSnackbar.open(msg, title, {\n            duration: 4000,\n            horizontalPosition: 'center',\n            verticalPosition: 'bottom'\n        });\n    };\n    /**\n     * @return {?}\n     */\n    NotificationService.prototype.notifyCancelled = /**\n     * @return {?}\n     */\n    function () {\n        return this.notify('Cancelled Operation');\n    };\n    NotificationService.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    NotificationService.ctorParameters = function () { return [\n        { type: MatSnackBar }\n    ]; };\n    return NotificationService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:member-ordering\nvar OptimisticFilesystemService = /** @class */ (function () {\n    function OptimisticFilesystemService(logger, notifications) {\n        this.logger = logger;\n        this.notifications = notifications;\n        this.refreshEmitter = new Subject();\n        this.destroyed = new Subject();\n        this.instanceCountIncr();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.instanceCountIncr = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        OptimisticFilesystemService.instanceCount++;\n        this.logger.info('new instance created', { instances: this.instances });\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.instanceCountDecr = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        OptimisticFilesystemService.instanceCount--;\n        this.logger.info('instance destroyed', { instances: this.instances });\n    };\n    Object.defineProperty(OptimisticFilesystemService.prototype, \"instances\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return OptimisticFilesystemService.instanceCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.instanceCountDecr();\n    };\n    Object.defineProperty(OptimisticFilesystemService.prototype, \"$CurrentPath\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.clientFilesystem.$currentPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OptimisticFilesystemService.prototype, \"$SelectedFile\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.clientFilesystem.$selectedFile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OptimisticFilesystemService.prototype, \"$FilesWithIcons\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.clientFilesystem.$FilesWithIcons;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} serverFilesystem\n     * @param {?} clientFilesystem\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.initialize = /**\n     * @param {?} serverFilesystem\n     * @param {?} clientFilesystem\n     * @return {?}\n     */\n    function (serverFilesystem, clientFilesystem) {\n        var _this = this;\n        this.logger.info('initializing...', { serverFilesystem: serverFilesystem, clientFilesystem: clientFilesystem });\n        this.serverFilesystem = serverFilesystem;\n        this.clientFilesystem = clientFilesystem;\n        this.destroyed.next();\n        this.refreshEmitter\n            .pipe(takeUntil(this.destroyed), tap((/**\n         * @param {?} currentPath\n         * @return {?}\n         */\n        function (currentPath) {\n            _this.clientFilesystem.OnList(currentPath);\n        })), debounceTime(800))\n            .subscribe((/**\n         * @param {?} currentPath\n         * @return {?}\n         */\n        function (currentPath) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.updateListFromServer(currentPath);\n                return [2 /*return*/];\n            });\n        }); }));\n    };\n    /**\n     * @private\n     * @param {?} error\n     * @param {?} title\n     * @param {?} msg\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.reportError = /**\n     * @private\n     * @param {?} error\n     * @param {?} title\n     * @param {?} msg\n     * @return {?}\n     */\n    function (error, title, msg) {\n        /** @type {?} */\n        var isApiError = error.message.startsWith('API Error');\n        console.error(\"Error in \\\"\" + title + \"\\\" ->msg: \\\"\" + msg + \"\\\" -> Error.message:\\\"\" + error.message + \"\\\"\", { isApiError: isApiError });\n        if (isApiError) {\n            return;\n        }\n        this.notifications.notify(msg, title);\n    };\n    /**\n     * @private\n     * @param {?} directoryPath\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.updateListFromServer = /**\n     * @private\n     * @param {?} directoryPath\n     * @return {?}\n     */\n    function (directoryPath) {\n        return __awaiter(this, void 0, void 0, function () {\n            var apiResult, currentDirectory, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 6, , 7]);\n                        this.logger.info('onHandleList', { directoryPath: directoryPath });\n                        return [4 /*yield*/, this.serverFilesystem.List(directoryPath)];\n                    case 1:\n                        apiResult = _a.sent();\n                        return [4 /*yield*/, this.clientFilesystem.UpdateList(apiResult, directoryPath)];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, this.$CurrentPath.pipe(take(1)).toPromise()];\n                    case 3:\n                        currentDirectory = _a.sent();\n                        if (!(currentDirectory === directoryPath)) return [3 /*break*/, 5];\n                        this.clientFilesystem.OnList(directoryPath);\n                        return [4 /*yield*/, this.selectFirstInCurrentDirectory()];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [3 /*break*/, 7];\n                    case 6:\n                        error_1 = _a.sent();\n                        this.reportError(error_1, 'Cannot get directory list', 'List Error');\n                        return [3 /*break*/, 7];\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} directoryPath\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.HandleList = /**\n     * @param {?} directoryPath\n     * @return {?}\n     */\n    function (directoryPath) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.refreshEmitter.next(directoryPath);\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @param {?} newPath\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.HandleCreateFolder = /**\n     * @param {?} newPath\n     * @return {?}\n     */\n    function (newPath) {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        this.logger.info('HandleCreateFolder', { newPath: newPath });\n                        this.clientFilesystem.OnCreateFolder(newPath);\n                        return [4 /*yield*/, this.serverFilesystem.CreateFolder(newPath)];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_2 = _a.sent();\n                        this.reportError(error_2, 'Cannot create folder', 'Create Folder Error');\n                        this.clientFilesystem.OnRemove([newPath]);\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} singleFileName\n     * @param {?} newPath\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.HandleCopy = /**\n     * @param {?} singleFileName\n     * @param {?} newPath\n     * @return {?}\n     */\n    function (singleFileName, newPath) {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        this.logger.info('HandleCopy', { singleFileName: singleFileName, newPath: newPath });\n                        this.clientFilesystem.OnCopy(singleFileName, newPath);\n                        return [4 /*yield*/, this.serverFilesystem.Copy(singleFileName, newPath)];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_3 = _a.sent();\n                        this.reportError(error_3, 'Cannot copy item', 'Copy Error');\n                        this.clientFilesystem.OnRemove([newPath]);\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} item\n     * @param {?} newPath\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.HandleMove = /**\n     * @param {?} item\n     * @param {?} newPath\n     * @return {?}\n     */\n    function (item, newPath) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                try {\n                    this.logger.info('HandleMove', { item: item, newPath: newPath });\n                    this.clientFilesystem.OnMove(item, newPath);\n                    return [2 /*return*/, this.serverFilesystem.Move(item, newPath)];\n                }\n                catch (error) {\n                    this.reportError(error, 'Cannot move item', 'Move Error');\n                    this.clientFilesystem.OnRemove([newPath]);\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @param {?} item\n     * @param {?} newItemPath\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.HandleRename = /**\n     * @param {?} item\n     * @param {?} newItemPath\n     * @return {?}\n     */\n    function (item, newItemPath) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                try {\n                    this.logger.info('HandleRename', { item: item, newItemPath: newItemPath });\n                    this.clientFilesystem.OnRename(item, newItemPath);\n                    return [2 /*return*/, this.serverFilesystem.Rename(item, newItemPath)];\n                }\n                catch (error) {\n                    this.reportError(error, 'Cannot rename item', 'Rename Error');\n                    this.clientFilesystem.OnRename(newItemPath, item);\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @param {?} item\n     * @param {?} content\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.HandleEdit = /**\n     * @param {?} item\n     * @param {?} content\n     * @return {?}\n     */\n    function (item, content) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                try {\n                    this.logger.info('HandleEdit', { item: item, content: content });\n                    this.clientFilesystem.OnEdit(item, content);\n                    return [2 /*return*/, this.serverFilesystem.Edit(item, content)];\n                }\n                catch (error) {\n                    this.reportError(error, 'Cannot edit item', 'Edit Error');\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.HandleGetcontent = /**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        return __awaiter(this, void 0, void 0, function () {\n            var response, error_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        this.logger.info('HandleGetcontent', { item: item });\n                        this.clientFilesystem.OnGetcontent(item);\n                        return [4 /*yield*/, this.serverFilesystem.Getcontent(item)];\n                    case 1:\n                        response = _a.sent();\n                        return [2 /*return*/, response.result];\n                    case 2:\n                        error_4 = _a.sent();\n                        this.reportError(error_4, 'Cannot get item', 'Get Content Error');\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} item\n     * @param {?} role\n     * @param {?} entity\n     * @param {?=} recursive\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.HandleSetPermissions = /**\n     * @param {?} item\n     * @param {?} role\n     * @param {?} entity\n     * @param {?=} recursive\n     * @return {?}\n     */\n    function (item, role, entity, recursive) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                try {\n                    this.logger.info('HandleSetPermissions', {\n                        item: item,\n                        role: role,\n                        entity: entity,\n                        recursive: recursive\n                    });\n                    this.clientFilesystem.OnSetPermissions(item, role, entity, recursive);\n                    return [2 /*return*/, this.serverFilesystem.SetPermissions(item, role, entity, recursive)];\n                }\n                catch (error) {\n                    this.reportError(error, 'Cannot set permissions to item', 'Permissions Error');\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @param {?} items\n     * @param {?} newPath\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.HandleMoveMultiple = /**\n     * @param {?} items\n     * @param {?} newPath\n     * @return {?}\n     */\n    function (items, newPath) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                try {\n                    this.logger.info('HandleMoveMultiple', { items: items, newPath: newPath });\n                    this.clientFilesystem.OnMoveMultiple(items, newPath);\n                    return [2 /*return*/, this.serverFilesystem.MoveMultiple(items, newPath)];\n                }\n                catch (error) {\n                    this.reportError(error, 'Cannot move items', 'Move Error');\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @param {?} items\n     * @param {?} newPath\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.HandleCopyMultiple = /**\n     * @param {?} items\n     * @param {?} newPath\n     * @return {?}\n     */\n    function (items, newPath) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                try {\n                    this.logger.info('HandleCopyMultiple', { items: items, newPath: newPath });\n                    this.clientFilesystem.OnCopyMultiple(items, newPath);\n                    return [2 /*return*/, this.serverFilesystem.CopyMultiple(items, newPath)];\n                }\n                catch (error) {\n                    this.reportError(error, 'Cannot copy items', 'Copy Error');\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @param {?} items\n     * @param {?} role\n     * @param {?} entity\n     * @param {?=} recursive\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.HandleSetPermissionsMultiple = /**\n     * @param {?} items\n     * @param {?} role\n     * @param {?} entity\n     * @param {?=} recursive\n     * @return {?}\n     */\n    function (items, role, entity, recursive) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                try {\n                    this.logger.info('HandleSetPermissionsMultiple', {\n                        items: items,\n                        role: role,\n                        entity: entity,\n                        recursive: recursive\n                    });\n                    this.clientFilesystem.OnSetPermissionsMultiple(items, role, entity, recursive);\n                    return [2 /*return*/, this.serverFilesystem.SetPermissionsMultiple(items, role, entity, recursive)];\n                }\n                catch (error) {\n                    this.reportError(error, 'Cannot set permissions to items', 'Permissions Error');\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @param {?} items\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.HandleRemove = /**\n     * @param {?} items\n     * @return {?}\n     */\n    function (items) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                try {\n                    this.logger.info('HandleRemove', { items: items });\n                    this.clientFilesystem.OnRemove(items);\n                    return [2 /*return*/, this.serverFilesystem.Remove(items)];\n                }\n                catch (error) {\n                    this.reportError(error, 'Cannot remove items', 'Remove Error');\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.HandleNavigateUp = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentPath, parentPath, error_5;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        this.logger.info('HandleNavigateUp');\n                        return [4 /*yield*/, this.$CurrentPath.pipe(take(1)).toPromise()];\n                    case 1:\n                        currentPath = _a.sent();\n                        parentPath = dirname(currentPath);\n                        return [2 /*return*/, this.HandleList(parentPath)];\n                    case 2:\n                        error_5 = _a.sent();\n                        this.reportError(error_5, 'Cannot navigate to parent directory', 'Navigate Error');\n                        throw new Error(error_5.message);\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.onSelectItem = /**\n     * @param {?} file\n     * @return {?}\n     */\n    function (file) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.clientFilesystem.onSelectItem(file);\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.GetItemByName = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        /** @type {?} */\n        var currentFiles = this.clientFilesystem.CurrentFiles();\n        /** @type {?} */\n        var match = currentFiles.find((/**\n         * @param {?} f\n         * @return {?}\n         */\n        function (f) { return f.fullPath === filePath; }));\n        return match;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.onSelectItemByName = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        /** @type {?} */\n        var match = this.GetItemByName(filePath);\n        this.clientFilesystem.onSelectItem(match);\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    OptimisticFilesystemService.prototype.selectFirstInCurrentDirectory = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentFiles, firstSelected;\n            return __generator(this, function (_a) {\n                currentFiles = this.clientFilesystem.CurrentFiles();\n                firstSelected = __spread(currentFiles).shift();\n                this.clientFilesystem.onSelectItem(firstSelected);\n                return [2 /*return*/];\n            });\n        });\n    };\n    OptimisticFilesystemService.instanceCount = 0;\n    OptimisticFilesystemService.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    OptimisticFilesystemService.ctorParameters = function () { return [\n        { type: LoggerService },\n        { type: NotificationService }\n    ]; };\n    return OptimisticFilesystemService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// temporary directory for the client while it refreshes\n/**\n * @param {?} name\n * @param {?} fullPath\n * @return {?}\n */\nfunction MakeClientDirectory(name, fullPath) {\n    return {\n        name: name,\n        fullPath: fullPath,\n        rightsFirebase: [],\n        permissions: (/** @type {?} */ ({})),\n        size: null,\n        date: new Date().toISOString(),\n        type: 'dir'\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar fileIcons = {\n    defaultIcon: { name: 'file' },\n    icons: [\n        { name: 'word', fileExtensions: ['doc', 'docx', 'rtf'] },\n        { name: 'pdf', fileExtensions: ['pdf'] },\n        { name: 'table', fileExtensions: ['xlsx', 'xls', 'csv', 'tsv'] },\n        {\n            name: 'html',\n            fileExtensions: ['html', 'htm', 'xhtml', 'html_vm', 'asp']\n        },\n        {\n            name: 'markdown',\n            fileExtensions: ['md', 'markdown', 'rst']\n        },\n        { name: 'yaml', fileExtensions: ['yaml', 'YAML-tmLanguage', 'yml'] },\n        {\n            name: 'xml',\n            fileExtensions: [\n                'xml',\n                'plist',\n                'xsd',\n                'dtd',\n                'xsl',\n                'xslt',\n                'resx',\n                'iml',\n                'xquery',\n                'tmLanguage',\n                'manifest',\n                'project'\n            ],\n            fileNames: ['.htaccess']\n        },\n        {\n            name: 'image',\n            fileExtensions: [\n                'png',\n                'jpeg',\n                'jpg',\n                'gif',\n                'svg',\n                'ico',\n                'tif',\n                'tiff',\n                'psd',\n                'psb',\n                'ami',\n                'apx',\n                'bmp',\n                'bpg',\n                'brk',\n                'cur',\n                'dds',\n                'dng',\n                'exr',\n                'fpx',\n                'gbr',\n                'img',\n                'jbig2',\n                'jb2',\n                'jng',\n                'jxr',\n                'pbm',\n                'pgf',\n                'pic',\n                'raw',\n                'webp',\n                'eps'\n            ]\n        },\n        { name: 'tex', fileExtensions: ['tex', 'cls', 'sty'] },\n        {\n            name: 'powerpoint',\n            fileExtensions: [\n                'pptx',\n                'ppt',\n                'pptm',\n                'potx',\n                'potm',\n                'ppsx',\n                'ppsm',\n                'pps',\n                'ppam',\n                'ppa'\n            ]\n        },\n        {\n            name: 'video',\n            fileExtensions: [\n                'webm',\n                'mkv',\n                'flv',\n                'vob',\n                'ogv',\n                'ogg',\n                'gifv',\n                'avi',\n                'mov',\n                'qt',\n                'wmv',\n                'yuv',\n                'rm',\n                'rmvb',\n                'mp4',\n                'm4v',\n                'mpg',\n                'mp2',\n                'mpeg',\n                'mpe',\n                'mpv',\n                'm2v'\n            ]\n        },\n        { name: 'audio', fileExtensions: ['mp3', 'flac', 'm4a', 'wma', 'aiff'] },\n        { name: 'document', fileExtensions: ['txt'] }\n    ]\n};\n/** @type {?} */\nvar folderIcons = [\n    {\n        name: 'specific',\n        defaultIcon: { name: 'folder-aws' },\n        rootFolder: { name: 'folder-root' },\n        icons: [\n            { name: 'folder-src', folderNames: ['src', 'source', 'sources'] },\n            { name: 'folder-dist', folderNames: ['dist', 'out', 'build', 'release'] },\n            {\n                name: 'folder-css',\n                folderNames: ['css', 'stylesheet', 'stylesheets', 'style', 'styles']\n            },\n            { name: 'folder-sass', folderNames: ['sass', '_sass', 'scss', '_scss'] },\n            {\n                name: 'folder-images',\n                folderNames: [\n                    'images',\n                    'image',\n                    'img',\n                    'icons',\n                    'icon',\n                    'ico',\n                    'screenshot',\n                    'screenshots'\n                ]\n            },\n            { name: 'folder-scripts', folderNames: ['script', 'scripts'] },\n            { name: 'folder-node', folderNames: ['node_modules'] },\n            {\n                name: 'folder-javascript',\n                folderNames: ['js', 'javascript', 'javascripts']\n            },\n            { name: 'folder-font', folderNames: ['font', 'fonts'] },\n            { name: 'folder-bower', folderNames: ['bower_components'] },\n            {\n                name: 'folder-test',\n                folderNames: [\n                    'test',\n                    'tests',\n                    'testing',\n                    '__tests__',\n                    '__snapshots__',\n                    '__mocks__',\n                    '__test__',\n                    'spec',\n                    'specs'\n                ]\n            },\n            {\n                name: 'folder-jinja',\n                folderNames: ['jinja', 'jinja2', 'j2'],\n                light: true\n            },\n            { name: 'folder-markdown', folderNames: ['markdown', 'md'] },\n            { name: 'folder-php', folderNames: ['php'] },\n            { name: 'folder-phpmailer', folderNames: ['phpmailer'] },\n            { name: 'folder-sublime', folderNames: ['sublime'] },\n            {\n                name: 'folder-docs',\n                folderNames: ['doc', 'docs', 'documents', 'documentation']\n            },\n            {\n                name: 'folder-git',\n                folderNames: ['.git', 'submodules', '.submodules']\n            },\n            { name: 'folder-github', folderNames: ['.github'] },\n            { name: 'folder-gitlab', folderNames: ['.gitlab'] },\n            { name: 'folder-vscode', folderNames: ['.vscode', '.vscode-test'] },\n            {\n                name: 'folder-views',\n                folderNames: [\n                    'view',\n                    'views',\n                    'screen',\n                    'screens',\n                    'page',\n                    'pages',\n                    'html'\n                ]\n            },\n            { name: 'folder-vue', folderNames: ['vue'] },\n            { name: 'folder-expo', folderNames: ['.expo'] },\n            {\n                name: 'folder-config',\n                folderNames: [\n                    'config',\n                    'configs',\n                    'configuration',\n                    'configurations',\n                    'settings',\n                    'META-INF'\n                ]\n            },\n            {\n                name: 'folder-i18n',\n                folderNames: [\n                    'i18n',\n                    'internationalization',\n                    'lang',\n                    'language',\n                    'languages',\n                    'locale',\n                    'locales',\n                    'localization',\n                    'translation',\n                    'translations'\n                ]\n            },\n            { name: 'folder-components', folderNames: ['components'] },\n            { name: 'folder-aurelia', folderNames: ['aurelia_project'] },\n            {\n                name: 'folder-resource',\n                folderNames: [\n                    'resource',\n                    'resources',\n                    'res',\n                    'asset',\n                    'assets',\n                    'static'\n                ]\n            },\n            {\n                name: 'folder-lib',\n                folderNames: ['lib', 'libs', 'library', 'libraries']\n            },\n            {\n                name: 'folder-theme',\n                folderNames: ['themes', 'theme', 'color', 'colors', 'design', 'designs']\n            },\n            { name: 'folder-webpack', folderNames: ['webpack'] },\n            { name: 'folder-global', folderNames: ['global'] },\n            { name: 'folder-public', folderNames: ['public', 'wwwroot'] },\n            {\n                name: 'folder-include',\n                folderNames: ['include', 'includes', '_includes']\n            },\n            { name: 'folder-docker', folderNames: ['docker', '.docker'] },\n            { name: 'folder-ngrx-effects', folderNames: ['effects'] },\n            { name: 'folder-ngrx-state', folderNames: ['states', 'state'] },\n            { name: 'folder-ngrx-reducer', folderNames: ['reducers', 'reducer'] },\n            { name: 'folder-ngrx-actions', folderNames: ['actions'] },\n            { name: 'folder-ngrx-entities', folderNames: ['entities'] },\n            { name: 'folder-redux-reducer', folderNames: ['reducers', 'reducer'] },\n            { name: 'folder-redux-actions', folderNames: ['actions'] },\n            { name: 'folder-redux-store', folderNames: ['store'] },\n            { name: 'folder-react-components', folderNames: ['components'] },\n            {\n                name: 'folder-database',\n                folderNames: ['db', 'database', 'sql', 'data', '_data']\n            },\n            { name: 'folder-log', folderNames: ['log', 'logs'] },\n            {\n                name: 'folder-temp',\n                folderNames: [\n                    'temp',\n                    '.temp',\n                    'tmp',\n                    '.tmp',\n                    'cached',\n                    'cache',\n                    '.cache'\n                ]\n            },\n            { name: 'folder-aws', folderNames: ['aws', '.aws'] },\n            { name: 'folder-audio', folderNames: ['audio', 'audios', 'music'] },\n            {\n                name: 'folder-video',\n                folderNames: ['video', 'videos', 'movie', 'movies']\n            },\n            { name: 'folder-kubernetes', folderNames: ['kubernetes', 'k8s'] },\n            { name: 'folder-import', folderNames: ['import', 'imports', 'imported'] },\n            { name: 'folder-export', folderNames: ['export', 'exports', 'exported'] },\n            { name: 'folder-wakatime', folderNames: ['wakatime'] },\n            { name: 'folder-circleci', folderNames: ['.circleci'] },\n            { name: 'folder-wordpress', folderNames: ['wp-content'] },\n            { name: 'folder-gradle', folderNames: ['gradle', '.gradle'] },\n            { name: 'folder-coverage', folderNames: ['coverage', '.nyc-output'] },\n            {\n                name: 'folder-class',\n                folderNames: ['class', 'classes', 'model', 'models']\n            },\n            {\n                name: 'folder-other',\n                folderNames: ['other', 'others', 'misc', 'miscellaneous']\n            },\n            { name: 'folder-typescript', folderNames: ['typescript', 'ts'] },\n            { name: 'folder-routes', folderNames: ['routes'] },\n            { name: 'folder-ci', folderNames: ['.ci', 'ci'] },\n            {\n                name: 'folder-benchmark',\n                folderNames: [\n                    'benchmark',\n                    'benchmarks',\n                    'performance',\n                    'measure',\n                    'measures',\n                    'measurement'\n                ]\n            },\n            {\n                name: 'folder-messages',\n                folderNames: [\n                    'messages',\n                    'forum',\n                    'chat',\n                    'chats',\n                    'conversation',\n                    'conversations'\n                ]\n            },\n            { name: 'folder-less', folderNames: ['less'] },\n            { name: 'folder-python', folderNames: ['python', '__pycache__'] },\n            { name: 'folder-debug', folderNames: ['debug', 'debugging'] },\n            { name: 'folder-fastlane', folderNames: ['fastlane'] },\n            {\n                name: 'folder-plugin',\n                folderNames: [\n                    'plugin',\n                    'plugins',\n                    '_plugins',\n                    'extension',\n                    'extensions',\n                    'addon',\n                    'addons'\n                ]\n            },\n            {\n                name: 'folder-controller',\n                folderNames: ['controller', 'controllers', 'service', 'services']\n            },\n            { name: 'folder-ansible', folderNames: ['ansible'] },\n            { name: 'folder-server', folderNames: ['server', 'servers', 'backend'] },\n            { name: 'folder-client', folderNames: ['client', 'clients', 'frontend'] },\n            { name: 'folder-tasks', folderNames: ['tasks', 'tickets'] },\n            { name: 'folder-android', folderNames: ['android'] },\n            { name: 'folder-ios', folderNames: ['ios'] },\n            { name: 'folder-upload', folderNames: ['uploads', 'upload'] },\n            { name: 'folder-download', folderNames: ['downloads', 'download'] },\n            { name: 'folder-tools', folderNames: ['tools'] },\n            { name: 'folder-helper', folderNames: ['helpers', 'helper'] }\n        ]\n    },\n    {\n        name: 'classic',\n        defaultIcon: { name: 'folder' },\n        rootFolder: { name: 'folder-root' }\n    },\n    { name: 'none', defaultIcon: { name: '' } }\n];\n/** @type {?} */\nvar getFileIconName = (/**\n * @param {?} input\n * @return {?}\n */\nfunction (input) {\n    if (!input || !input.includes('.')) {\n        return fileIcons.defaultIcon.name;\n    }\n    /** @type {?} */\n    var filename = input.toLowerCase();\n    /** @type {?} */\n    var ext = getFileExtension(filename);\n    /** @type {?} */\n    var matchesExt = fileIcons.icons.filter((/**\n     * @param {?} x\n     * @return {?}\n     */\n    function (x) { return !!x.fileExtensions && !!x.fileExtensions.filter((/**\n     * @param {?} y\n     * @return {?}\n     */\n    function (y) { return y === ext; })).length; }));\n    /** @type {?} */\n    var matchesFilename = fileIcons.icons.filter((/**\n     * @param {?} x\n     * @return {?}\n     */\n    function (x) { return !!x.fileNames && !!x.fileNames.filter((/**\n     * @param {?} y\n     * @return {?}\n     */\n    function (y) { return y === filename; })).length; }));\n    if (!!matchesFilename.length) {\n        return matchesFilename[0].name;\n    }\n    else if (!!matchesExt.length) {\n        return matchesExt[0].name;\n    }\n    return fileIcons.defaultIcon.name;\n});\n/** @type {?} */\nvar isFileImage = (/**\n * @param {?} filename\n * @return {?}\n */\nfunction (filename) { return getFileIconName(filename) === 'image'; });\n/** @type {?} */\nvar getFileExtension = (/**\n * @param {?} filename\n * @return {?}\n */\nfunction (filename) { return filename.split('.').pop(); });\n/** @type {?} */\nvar getFileName = (/**\n * @param {?} filename\n * @return {?}\n */\nfunction (filename) {\n    /** @type {?} */\n    var slashSegments = filename.split('/');\n    /** @type {?} */\n    var filenameWithExt = slashSegments.pop();\n    /** @type {?} */\n    var dotSegments = filenameWithExt.split('.');\n    if (dotSegments.length < 2) {\n        return filenameWithExt;\n    }\n    dotSegments.pop();\n    return dotSegments.join('.');\n});\n/** @type {?} */\nvar getFolderIconName = (/**\n * @param {?} filename\n * @return {?}\n */\nfunction (filename) {\n    return 'folder-other';\n    filename = filename.toLowerCase();\n    /** @type {?} */\n    var matches = folderIcons[0].icons.filter((/**\n     * @param {?} x\n     * @return {?}\n     */\n    function (x) { return !!x.folderNames && !!x.folderNames.filter((/**\n     * @param {?} y\n     * @return {?}\n     */\n    function (y) { return y === filename; })).length; }));\n    if (!!matches.length) {\n        return matches[0].name;\n    }\n    return folderIcons[0].defaultIcon.name;\n});\n/** @type {?} */\nvar guesser = {\n    isFileImage: isFileImage,\n    getFileExtension: getFileExtension,\n    getFileName: getFileName,\n    getFolderIconName: getFolderIconName,\n    getFileIconName: getFileIconName,\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar getFileIcon = (/**\n * @param {?} filename\n * @return {?}\n */\nfunction (filename) {\n    return '/assets/fileicons/' + guesser.getFileIconName(filename) + '.svg';\n});\n/** @type {?} */\nvar getFolderIcon = (/**\n * @param {?} filename\n * @return {?}\n */\nfunction (filename) {\n    return '/assets/fileicons/' + guesser.getFolderIconName(filename) + '.svg';\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar ConsoleLoggerService = /** @class */ (function () {\n    function ConsoleLoggerService() {\n    }\n    Object.defineProperty(ConsoleLoggerService.prototype, \"info\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var boundLogFn = console.log.bind(console, 'ngx-fm:: ');\n            return boundLogFn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConsoleLoggerService.prototype, \"warn\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var boundLogFn = console.warn.bind(console, 'ngx-fm:: ');\n            return boundLogFn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConsoleLoggerService.prototype, \"error\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var boundLogFn = console.error.bind(console, 'ngx-fm:: ');\n            return boundLogFn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ConsoleLoggerService.decorators = [\n        { type: Injectable }\n    ];\n    return ConsoleLoggerService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar ClientCache = /** @class */ (function () {\n    function ClientCache() {\n        this.logger = new ConsoleLoggerService();\n        this.cachedFolders = {};\n        this.cacheLimit = 20;\n    }\n    /**\n     * @param {?} folderPath\n     * @return {?}\n     */\n    ClientCache.prototype.GetCached = /**\n     * @param {?} folderPath\n     * @return {?}\n     */\n    function (folderPath) {\n        return this.cachedFolders[folderPath] || [];\n    };\n    /**\n     * @param {?} folderPath\n     * @param {?} newFolderFiles\n     * @return {?}\n     */\n    ClientCache.prototype.SetCached = /**\n     * @param {?} folderPath\n     * @param {?} newFolderFiles\n     * @return {?}\n     */\n    function (folderPath, newFolderFiles) {\n        /** @type {?} */\n        var oldFolders = this.GetCached(folderPath);\n        this.logger.info('SetCached()', {\n            from: oldFolders.length,\n            to: newFolderFiles.length\n        });\n        if (this.cachedCount > this.cacheLimit) {\n            this.removeRandomFolderPath();\n        }\n        this.cachedFolders[folderPath] = newFolderFiles;\n    };\n    Object.defineProperty(ClientCache.prototype, \"cachedCount\", {\n        get: /**\n         * @private\n         * @return {?}\n         */\n        function () {\n            return Object.keys(this.cachedFolders).length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @private\n     * @return {?}\n     */\n    ClientCache.prototype.removeRandomFolderPath = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var randomIndex = Math.floor(Math.random() * this.cachedCount);\n        /** @type {?} */\n        var randomKey = Object.keys(this.cachedFolders)[randomIndex];\n        delete this.cachedFolders[randomKey];\n    };\n    return ClientCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar ClientFileSystemDataStore = /** @class */ (function () {\n    function ClientFileSystemDataStore() {\n        this.cache = new ClientCache();\n        this._$currentFiles = new BehaviorSubject([]);\n        this._$currentPath = new BehaviorSubject(null);\n        this._$selectedFile = new BehaviorSubject(null);\n        this.logger = new ConsoleLoggerService();\n    }\n    Object.defineProperty(ClientFileSystemDataStore.prototype, \"$currentFiles\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._$currentFiles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClientFileSystemDataStore.prototype, \"$currentPath\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._$currentPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClientFileSystemDataStore.prototype, \"$selectedFile\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._$selectedFile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ClientFileSystemDataStore.prototype.CurrentPath = /**\n     * @return {?}\n     */\n    function () {\n        return this._$currentPath.value;\n    };\n    /**\n     * @return {?}\n     */\n    ClientFileSystemDataStore.prototype.CurrentFiles = /**\n     * @return {?}\n     */\n    function () {\n        return this._$currentFiles.value;\n    };\n    /**\n     * @param {?} directoryPath\n     * @return {?}\n     */\n    ClientFileSystemDataStore.prototype.GetCached = /**\n     * @param {?} directoryPath\n     * @return {?}\n     */\n    function (directoryPath) {\n        return this.cache.GetCached(directoryPath);\n    };\n    /**\n     * @param {?} files\n     * @param {?} directoryPath\n     * @return {?}\n     */\n    ClientFileSystemDataStore.prototype.SetDirectoryFiles = /**\n     * @param {?} files\n     * @param {?} directoryPath\n     * @return {?}\n     */\n    function (files, directoryPath) {\n        this.cache.SetCached(directoryPath, files);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    ClientFileSystemDataStore.prototype.SetPath = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        this.logger.info('datastore.SetPath', { path: path });\n        if (!path.startsWith('/')) {\n            throw new Error('No / at beginning of path!');\n        }\n        /** @type {?} */\n        var cachedFiles = this.cache.GetCached(path);\n        this._$currentPath.next(path);\n        this._$currentFiles.next(cachedFiles);\n    };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    ClientFileSystemDataStore.prototype.SelectFile = /**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        this._$selectedFile.next(item);\n    };\n    return ClientFileSystemDataStore;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:member-ordering\nvar ClientFileSystemService = /** @class */ (function () {\n    function ClientFileSystemService(logger) {\n        this.logger = logger;\n        this.store = new ClientFileSystemDataStore();\n        this.instanceCountIncr();\n    }\n    Object.defineProperty(ClientFileSystemService.prototype, \"$currentFiles\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.store.$currentFiles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClientFileSystemService.prototype, \"$currentPath\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.store.$currentPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClientFileSystemService.prototype, \"$selectedFile\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.store.$selectedFile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @private\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.instanceCountIncr = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        ClientFileSystemService.instanceCount++;\n        this.logger.info('new instance created', { instances: this.instances });\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.instanceCountDecr = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        ClientFileSystemService.instanceCount--;\n        this.logger.info('instance destroyed', { instances: this.instances });\n    };\n    Object.defineProperty(ClientFileSystemService.prototype, \"instances\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return ClientFileSystemService.instanceCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.instanceCountDecr();\n    };\n    /**\n     * @param {?} folderPath\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.OnList = /**\n     * @param {?} folderPath\n     * @return {?}\n     */\n    function (folderPath) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.logger.info('client.OnList', { folderPath: folderPath });\n                this.store.SetPath(folderPath);\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @param {?} newPath\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.OnCreateFolder = /**\n     * @param {?} newPath\n     * @return {?}\n     */\n    function (newPath) {\n        return __awaiter(this, void 0, void 0, function () {\n            var directoryPath, cachedFiles, folderName, newFolder;\n            return __generator(this, function (_a) {\n                directoryPath = dirname(newPath);\n                cachedFiles = this.store.GetCached(directoryPath);\n                folderName = basename(newPath);\n                newFolder = MakeClientDirectory(folderName, newPath);\n                cachedFiles.unshift(newFolder);\n                this.store.SetDirectoryFiles(cachedFiles, directoryPath);\n                this.store.SetPath(directoryPath);\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @param {?} singleFileName\n     * @param {?} newPath\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.OnCopy = /**\n     * @param {?} singleFileName\n     * @param {?} newPath\n     * @return {?}\n     */\n    function (singleFileName, newPath) {\n        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2 /*return*/];\n        }); });\n    };\n    /**\n     * @param {?} item\n     * @param {?} newPath\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.OnMove = /**\n     * @param {?} item\n     * @param {?} newPath\n     * @return {?}\n     */\n    function (item, newPath) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.removeSingleFromList(item)];\n            });\n        });\n    };\n    /**\n     * @param {?} item\n     * @param {?} newItemPath\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.OnRename = /**\n     * @param {?} item\n     * @param {?} newItemPath\n     * @return {?}\n     */\n    function (item, newItemPath) {\n        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2 /*return*/];\n        }); });\n    };\n    /**\n     * @param {?} item\n     * @param {?} content\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.OnEdit = /**\n     * @param {?} item\n     * @param {?} content\n     * @return {?}\n     */\n    function (item, content) {\n        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2 /*return*/];\n        }); });\n    };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.OnGetcontent = /**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2 /*return*/];\n        }); });\n    };\n    /**\n     * @param {?} item\n     * @param {?} role\n     * @param {?} entity\n     * @param {?=} recursive\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.OnSetPermissions = /**\n     * @param {?} item\n     * @param {?} role\n     * @param {?} entity\n     * @param {?=} recursive\n     * @return {?}\n     */\n    function (item, role, entity, recursive) {\n        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2 /*return*/];\n        }); });\n    };\n    /**\n     * @param {?} items\n     * @param {?} newPath\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.OnMoveMultiple = /**\n     * @param {?} items\n     * @param {?} newPath\n     * @return {?}\n     */\n    function (items, newPath) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.removeMultiple(items)];\n            });\n        });\n    };\n    /**\n     * @param {?} items\n     * @param {?} newPath\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.OnCopyMultiple = /**\n     * @param {?} items\n     * @param {?} newPath\n     * @return {?}\n     */\n    function (items, newPath) {\n        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2 /*return*/];\n        }); });\n    };\n    /**\n     * @param {?} items\n     * @param {?} role\n     * @param {?} entity\n     * @param {?=} recursive\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.OnSetPermissionsMultiple = /**\n     * @param {?} items\n     * @param {?} role\n     * @param {?} entity\n     * @param {?=} recursive\n     * @return {?}\n     */\n    function (items, role, entity, recursive) {\n        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2 /*return*/];\n        }); });\n    };\n    /**\n     * @param {?} items\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.OnRemove = /**\n     * @param {?} items\n     * @return {?}\n     */\n    function (items) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.removeMultiple(items)];\n            });\n        });\n    };\n    /**\n     * @param {?} res\n     * @param {?} directoryPath\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.UpdateList = /**\n     * @param {?} res\n     * @param {?} directoryPath\n     * @return {?}\n     */\n    function (res, directoryPath) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.store.SetDirectoryFiles(res.result, directoryPath);\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @private\n     * @param {?} filePath\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.removeSingleFromList = /**\n     * @private\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        return __awaiter(this, void 0, void 0, function () {\n            var directoryPath, currentFiles, itemName, cachedFilesWithout;\n            return __generator(this, function (_a) {\n                directoryPath = dirname(filePath);\n                currentFiles = this.store.GetCached(filePath);\n                itemName = this.GetFileNameFromPath(filePath);\n                cachedFilesWithout = currentFiles.filter((/**\n                 * @param {?} f\n                 * @return {?}\n                 */\n                function (f) { return f.name !== itemName; }));\n                this.store.SetDirectoryFiles(cachedFilesWithout, directoryPath);\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @private\n     * @param {?} inputPath\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.EnsureNoTrailingSlash = /**\n     * @private\n     * @param {?} inputPath\n     * @return {?}\n     */\n    function (inputPath) {\n        /** @type {?} */\n        var hasTrailing = inputPath.slice(-1) === '/';\n        /** @type {?} */\n        var pathParsed = hasTrailing ? inputPath.slice(0, -1) : inputPath;\n        return pathParsed;\n    };\n    /**\n     * @private\n     * @param {?} inputPath\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.GetFileNameFromPath = /**\n     * @private\n     * @param {?} inputPath\n     * @return {?}\n     */\n    function (inputPath) {\n        /** @type {?} */\n        var safePath = inputPath || '';\n        /** @type {?} */\n        var parsedPath = this.EnsureNoTrailingSlash(safePath);\n        /** @type {?} */\n        var basename$$1 = parsedPath.split('/').pop();\n        return basename$$1;\n    };\n    /**\n     * @private\n     * @param {?} filePaths\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.removeMultiple = /**\n     * @private\n     * @param {?} filePaths\n     * @return {?}\n     */\n    function (filePaths) {\n        return __awaiter(this, void 0, void 0, function () {\n            var directoryPath, removeSet, currentFiles, cachedFilesWithout;\n            return __generator(this, function (_a) {\n                directoryPath = dirname(filePaths[0]);\n                removeSet = new Set(filePaths.map((/**\n                 * @param {?} filePath\n                 * @return {?}\n                 */\n                function (filePath) { return basename(filePath); })));\n                currentFiles = this.store.GetCached(directoryPath);\n                cachedFilesWithout = currentFiles.filter((/**\n                 * @param {?} f\n                 * @return {?}\n                 */\n                function (f) { return !removeSet.has(f.name); }));\n                this.store.SetDirectoryFiles(cachedFilesWithout, directoryPath);\n                this.store.SetPath(directoryPath);\n                return [2 /*return*/];\n            });\n        });\n    };\n    Object.defineProperty(ClientFileSystemService.prototype, \"$FilesWithIcons\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var _this = this;\n            return this.$currentFiles.pipe(map((/**\n             * @param {?} files\n             * @return {?}\n             */\n            function (files) { return (files ? files : []); })), map((/**\n             * @param {?} files\n             * @return {?}\n             */\n            function (files) { return files.map((/**\n             * @param {?} file\n             * @return {?}\n             */\n            function (file) { return _this.addIconPath(file); })); })), map((/**\n             * @param {?} files\n             * @return {?}\n             */\n            function (files) {\n                return files.map((/**\n                 * @param {?} file\n                 * @return {?}\n                 */\n                function (file) {\n                    return __assign({}, file);\n                }));\n            })));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClientFileSystemService.prototype, \"$NoParentFolder\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.$currentPath.pipe(filter((/**\n             * @param {?} p\n             * @return {?}\n             */\n            function (p) { return !!p; })), map((/**\n             * @param {?} p\n             * @return {?}\n             */\n            function (p) { return p.split('/').length < 2; })));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.onSelectItem = /**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        this.store.SelectFile(item);\n    };\n    /**\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.CurrentFiles = /**\n     * @return {?}\n     */\n    function () {\n        return this.store.CurrentFiles();\n    };\n    /**\n     * @private\n     * @param {?} file\n     * @return {?}\n     */\n    ClientFileSystemService.prototype.addIconPath = /**\n     * @private\n     * @param {?} file\n     * @return {?}\n     */\n    function (file) {\n        if (file.type === 'file') {\n            file['icon'] = getFileIcon(file.name);\n        }\n        else {\n            file['icon'] = getFolderIcon(file.name);\n        }\n        return file;\n    };\n    ClientFileSystemService.instanceCount = 0;\n    ClientFileSystemService.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    ClientFileSystemService.ctorParameters = function () { return [\n        { type: LoggerService }\n    ]; };\n    return ClientFileSystemService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar AppDialogRenameComponent = /** @class */ (function () {\n    function AppDialogRenameComponent(dialogRef, data) {\n        this.dialogRef = dialogRef;\n        this.data = data;\n        this.renamedItem = new FormControl();\n        /** @type {?} */\n        var name = basename(data.currentPath);\n        this.renamedItem.setValue(name);\n    }\n    /**\n     * @return {?}\n     */\n    AppDialogRenameComponent.prototype.onSubmit = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var renamedFullPath = this.newPath;\n        this.dialogRef.close(renamedFullPath);\n    };\n    /**\n     * @return {?}\n     */\n    AppDialogRenameComponent.prototype.onCancel = /**\n     * @return {?}\n     */\n    function () {\n        this.dialogRef.close();\n    };\n    Object.defineProperty(AppDialogRenameComponent.prototype, \"newPath\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            /** @type {?} */\n            var directoryPath = dirname(this.data.currentPath);\n            /** @type {?} */\n            var newItemName = this.renamedItem.value;\n            if (this.IsDir) {\n                return join(directoryPath, newItemName, '/');\n            }\n            return join(directoryPath, newItemName);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppDialogRenameComponent.prototype, \"IsDir\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.data.currentPath.endsWith('/');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AppDialogRenameComponent.decorators = [\n        { type: Component, args: [{\n                    // tslint:disable-next-line:component-selector\n                    selector: 'ngx-filemanager-rename-file-dialog',\n                    template: \"\\n    <base-dialog\\n      [header]=\\\"headerTemplate\\\"\\n      [body]=\\\"bodyTemplate\\\"\\n      [actions]=\\\"actionsTemplate\\\"\\n    >\\n      <ng-template #headerTemplate>\\n        <h2>Rename Item</h2>\\n      </ng-template>\\n      <ng-template #bodyTemplate>\\n        <h5 class=\\\"p5 m0\\\">Old Path: {{ data.currentPath }}</h5>\\n        <h5 class=\\\"p5 m0\\\">New Path: {{ newPath }}</h5>\\n\\n        <mat-form-field>\\n          <input\\n            matInput\\n            placeholder=\\\"New Name\\\"\\n            [formControl]=\\\"renamedItem\\\"\\n            (keyup.enter)=\\\"onSubmit()\\\"\\n          />\\n        </mat-form-field>\\n      </ng-template>\\n      <ng-template #actionsTemplate>\\n        <btns-cancel-ok\\n          okIcon=\\\"done\\\"\\n          okLabel=\\\"Rename Item\\\"\\n          (clickedCancel)=\\\"onCancel()\\\"\\n          (clickedOk)=\\\"onSubmit()\\\"\\n        >\\n        </btns-cancel-ok>\\n      </ng-template>\\n    </base-dialog>\\n  \",\n                    styles: [\".is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.fit-content{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    AppDialogRenameComponent.ctorParameters = function () { return [\n        { type: MatDialogRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }\n    ]; };\n    return AppDialogRenameComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} inputPath\n * @return {?}\n */\nfunction HasPrefixSlash(inputPath) {\n    if (!inputPath || !inputPath.length) {\n        return false;\n    }\n    /** @type {?} */\n    var hasPrefix = inputPath.startsWith('/');\n    return hasPrefix;\n}\n/**\n * @param {?} inputPath\n * @return {?}\n */\nfunction HasTrailingSlash(inputPath) {\n    if (!inputPath || !inputPath.length) {\n        return false;\n    }\n    /** @type {?} */\n    var hasPrefix = inputPath.endsWith('/');\n    return hasPrefix;\n}\n/**\n * @param {?} inputPath\n * @return {?}\n */\nfunction EnsurePrefixSlash(inputPath) {\n    /** @type {?} */\n    var hasPrefix = HasPrefixSlash(inputPath);\n    /** @type {?} */\n    var pathParsed = hasPrefix ? inputPath : '/' + inputPath;\n    return pathParsed;\n}\n/**\n * @param {?} inputPath\n * @return {?}\n */\nfunction EnsureTrailingSlash(inputPath) {\n    /** @type {?} */\n    var hasTrailing = HasTrailingSlash(inputPath);\n    /** @type {?} */\n    var pathParsed = hasTrailing ? inputPath : inputPath + '/';\n    return pathParsed;\n}\n/**\n * @param {?} inputPath\n * @return {?}\n */\nfunction EnsureAbsoluteDirectory(inputPath) {\n    /** @type {?} */\n    var pathParsed = EnsureTrailingSlash(EnsurePrefixSlash(inputPath));\n    return pathParsed;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar AppDialogCopyComponent = /** @class */ (function () {\n    function AppDialogCopyComponent(logger, dialogRef, data) {\n        this.logger = logger;\n        this.dialogRef = dialogRef;\n        this.data = data;\n        this.logger.info('initializing dialog:', { data: this.data });\n        this.items = data.files;\n        if (this.data.isCopy) {\n            this.OkLabel = 'Copy';\n            this.OkIcon = 'content_copy';\n        }\n        else {\n            this.OkLabel = 'Move';\n            this.OkIcon = 'forward';\n        }\n        this.serverFilesystem = data.serverFilesystem;\n        /** @type {?} */\n        var firstFile = __spread(this.items).pop();\n        this.currentDir = EnsureTrailingSlash(dirname(firstFile.fullPath));\n    }\n    Object.defineProperty(AppDialogCopyComponent.prototype, \"SelectedFolder\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return !!this.copyToPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppDialogCopyComponent.prototype, \"SameAsRoot\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.copyToPath === this.currentDir;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppDialogCopyComponent.prototype, \"DisableCopy\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return !this.SelectedFolder || this.SameAsRoot;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} selectedDirectory\n     * @return {?}\n     */\n    AppDialogCopyComponent.prototype.onClickedItem = /**\n     * @param {?} selectedDirectory\n     * @return {?}\n     */\n    function (selectedDirectory) {\n        this.logger.info('clicked this item:', { file: selectedDirectory });\n        this.copyToPath = selectedDirectory;\n    };\n    /**\n     * @return {?}\n     */\n    AppDialogCopyComponent.prototype.onSubmit = /**\n     * @return {?}\n     */\n    function () {\n        this.dialogRef.close(this.copyToPath);\n    };\n    /**\n     * @return {?}\n     */\n    AppDialogCopyComponent.prototype.onCancel = /**\n     * @return {?}\n     */\n    function () {\n        this.dialogRef.close();\n    };\n    AppDialogCopyComponent.decorators = [\n        { type: Component, args: [{\n                    // tslint:disable-next-line:component-selector\n                    selector: 'ngx-filemanager-copy-dialog',\n                    template: \"\\n    <base-dialog\\n      [header]=\\\"headerTemplate\\\"\\n      [body]=\\\"bodyTemplate\\\"\\n      [actions]=\\\"actionsTemplate\\\"\\n    >\\n      <ng-template #headerTemplate>\\n        <h2>{{OkLabel}} Items</h2>\\n      </ng-template>\\n      <ng-template #bodyTemplate>\\n        <h5>Selected Items</h5>\\n        <ol>\\n          <li *ngFor=\\\"let file of items\\\">\\n            {{ file.name }}\\n          </li>\\n        </ol>\\n        <div>\\n          <app-file-table-mini-folder-browser\\n            (selectedDirectory)=\\\"onClickedItem($event)\\\"\\n            [serverFilesystem]=\\\"this.serverFilesystem\\\"\\n            currentDirectory=\\\"/\\\"\\n          >\\n          </app-file-table-mini-folder-browser>\\n        </div>\\n      </ng-template>\\n      <ng-template #actionsTemplate>\\n        <h5 class=\\\"p5 m0\\\" *ngIf=\\\"!SelectedFolder\\\">No folder selected</h5>\\n        <h5 class=\\\"p5 m0\\\" *ngIf=\\\"SameAsRoot\\\">Cannot copy to the same folder</h5>\\n        <h5 class=\\\"p5 m0\\\" *ngIf=\\\"!DisableCopy\\\">CopyTo Path: {{copyToPath}}</h5>\\n        <btns-cancel-ok\\n          [okIcon]=\\\"OkIcon\\\"\\n          [okLabel]=\\\"OkLabel\\\"\\n          [okDisabled]=\\\"DisableCopy\\\"\\n          (clickedCancel)=\\\"onCancel()\\\"\\n          (clickedOk)=\\\"onSubmit()\\\"\\n        >\\n        </btns-cancel-ok>\\n      </ng-template>\\n    </base-dialog>\\n  \",\n                    styles: [\".is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.fit-content{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    AppDialogCopyComponent.ctorParameters = function () { return [\n        { type: LoggerService },\n        { type: MatDialogRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }\n    ]; };\n    return AppDialogCopyComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar AppDialogSetPermissionsComponent = /** @class */ (function () {\n    function AppDialogSetPermissionsComponent(dialogRef, data) {\n        this.dialogRef = dialogRef;\n        this.data = data;\n        this.roleControl = new FormControl('READER');\n        this.roleOptions = ['OWNER', 'WRITER', 'READER'];\n        this.entityTypeControl = new FormControl('group');\n        this.entityTypeOptions = ['user', 'group'];\n        this.entityControl = new FormControl();\n        this.destroyed = new Subject();\n        this.items = data.files;\n        /** @type {?} */\n        var config = data.config;\n        this.$users = config.users.pipe(this.pipeConvertToEntity('user'));\n        this.$groups = config.groups.pipe(this.pipeConvertToEntity('group'));\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    AppDialogSetPermissionsComponent.prototype.pipeConvertToEntity = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return pipe(map((/**\n         * @param {?} arr\n         * @return {?}\n         */\n        function (arr) {\n            return arr.map((/**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) {\n                /** @type {?} */\n                var entity = {\n                    name: value.name,\n                    id: value.uid,\n                    type: type\n                };\n                return entity;\n            }));\n        })), tap((/**\n         * @param {?} vals\n         * @return {?}\n         */\n        function (vals) { return console.log('dialog setpermissions', { type: type, vals: vals }); })));\n    };\n    /**\n     * @return {?}\n     */\n    AppDialogSetPermissionsComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.destroyed.next();\n    };\n    Object.defineProperty(AppDialogSetPermissionsComponent.prototype, \"EntityControlLabel\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.entityTypeControl.value === 'user' ? 'User' : 'Group';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppDialogSetPermissionsComponent.prototype, \"HasSelectedUser\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.entityTypeControl.value === 'user';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    AppDialogSetPermissionsComponent.prototype.onSubmit = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var response = {\n            role: this.roleControl.value,\n            entity: this.entityControl.value,\n            files: this.data.files\n        };\n        this.dialogRef.close(response);\n    };\n    /**\n     * @return {?}\n     */\n    AppDialogSetPermissionsComponent.prototype.onCancel = /**\n     * @return {?}\n     */\n    function () {\n        this.dialogRef.close();\n    };\n    AppDialogSetPermissionsComponent.decorators = [\n        { type: Component, args: [{\n                    // tslint:disable-next-line:component-selector\n                    selector: 'ngx-filemanager-setpermissions-dialog',\n                    template: \"\\n    <base-dialog\\n      [header]=\\\"headerTemplate\\\"\\n      [body]=\\\"bodyTemplate\\\"\\n      [actions]=\\\"actionsTemplate\\\"\\n    >\\n      <ng-template #headerTemplate>\\n        <h2>Set Permissions</h2>\\n      </ng-template>\\n      <ng-template #bodyTemplate>\\n        <h5>Selected Items</h5>\\n        <ol>\\n          <li *ngFor=\\\"let file of items\\\">\\n            {{ file.name }}\\n          </li>\\n        </ol>\\n\\n        <mat-form-field class=\\\"full-width\\\">\\n          <mat-select\\n            matInput\\n            [formControl]=\\\"entityTypeControl\\\"\\n            placeholder=\\\"Type\\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let option of entityTypeOptions\\\"\\n              [value]=\\\"option\\\"\\n            >\\n              {{ option }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"full-width\\\" *ngIf=\\\"HasSelectedUser\\\">\\n          <mat-select\\n            matInput\\n            [formControl]=\\\"entityControl\\\"\\n            [placeholder]=\\\"EntityControlLabel\\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let entity of ($users | async)\\\"\\n              [value]=\\\"entity\\\"\\n            >\\n              {{ entity.name }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"full-width\\\" *ngIf=\\\"!HasSelectedUser\\\">\\n          <mat-select\\n            matInput\\n            [formControl]=\\\"entityControl\\\"\\n            [placeholder]=\\\"EntityControlLabel\\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let entity of ($groups | async)\\\"\\n              [value]=\\\"entity\\\"\\n            >\\n              {{ entity.name }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"full-width\\\">\\n          <mat-select\\n            matInput\\n            [formControl]=\\\"roleControl\\\"\\n            placeholder=\\\"Permissions\\\"\\n          >\\n            <mat-option *ngFor=\\\"let option of roleOptions\\\" [value]=\\\"option\\\">\\n              {{ option }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </ng-template>\\n      <ng-template #actionsTemplate>\\n        <btns-cancel-ok\\n          okIcon=\\\"done\\\"\\n          okLabel=\\\"Set Permissions\\\"\\n          (clickedCancel)=\\\"onCancel()\\\"\\n          (clickedOk)=\\\"onSubmit()\\\"\\n        >\\n        </btns-cancel-ok>\\n      </ng-template>\\n    </base-dialog>\\n  \",\n                    styles: [\".is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.fit-content{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    AppDialogSetPermissionsComponent.ctorParameters = function () { return [\n        { type: MatDialogRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }\n    ]; };\n    return AppDialogSetPermissionsComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar AppDialogNewFolderComponent = /** @class */ (function () {\n    function AppDialogNewFolderComponent(dialogRef) {\n        this.dialogRef = dialogRef;\n        this.folderName = new FormControl('New folder');\n    }\n    /**\n     * @return {?}\n     */\n    AppDialogNewFolderComponent.prototype.onSubmit = /**\n     * @return {?}\n     */\n    function () {\n        this.dialogRef.close(this.folderName.value);\n    };\n    /**\n     * @return {?}\n     */\n    AppDialogNewFolderComponent.prototype.onCancel = /**\n     * @return {?}\n     */\n    function () {\n        this.dialogRef.close();\n    };\n    AppDialogNewFolderComponent.decorators = [\n        { type: Component, args: [{\n                    // tslint:disable-next-line:component-selector\n                    selector: 'ngx-filemanager-new-folder-dialog',\n                    template: \"\\n    <base-dialog\\n      [header]=\\\"headerTemplate\\\"\\n      [body]=\\\"bodyTemplate\\\"\\n      [actions]=\\\"actionsTemplate\\\"\\n    >\\n      <ng-template #headerTemplate>\\n        <h2>Create Folder</h2>\\n      </ng-template>\\n      <ng-template #bodyTemplate>\\n        <div>\\n          <mat-form-field>\\n            <input\\n              matInput\\n              placeholder=\\\"New Folder Name\\\"\\n              [formControl]=\\\"folderName\\\"\\n              (keyup.enter)=\\\"onSubmit()\\\"\\n            />\\n          </mat-form-field>\\n        </div>\\n      </ng-template>\\n      <ng-template #actionsTemplate>\\n        <btns-cancel-ok\\n          okIcon=\\\"done\\\"\\n          okLabel=\\\"Create Folder\\\"\\n          (clickedCancel)=\\\"onCancel()\\\"\\n          (clickedOk)=\\\"onSubmit()\\\"\\n        >\\n        </btns-cancel-ok>\\n      </ng-template>\\n    </base-dialog>\\n  \",\n                    styles: [\".is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.fit-content{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    AppDialogNewFolderComponent.ctorParameters = function () { return [\n        { type: MatDialogRef }\n    ]; };\n    return AppDialogNewFolderComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar AppDialogUploadFilesComponent = /** @class */ (function () {\n    function AppDialogUploadFilesComponent(logger, notifications, dialogRef, data) {\n        this.logger = logger;\n        this.notifications = notifications;\n        this.dialogRef = dialogRef;\n        this.data = data;\n        this.currentDirectory = '';\n        this.dropzoneConfig = {\n            url: 'https://httpbin.org/post/upload?bucketname=resvu-integration-tests.appspot.com&directoryPath=/',\n            maxFilesize: 50,\n            // acceptedFiles: 'image/*',\n            uploadMultiple: false\n        };\n        this.uploadQueue = {};\n        this.currentDirectory = data.currentPath;\n        this.dropzoneConfig.url = data.uploadApiUrl;\n    }\n    Object.defineProperty(AppDialogUploadFilesComponent.prototype, \"isDoneUploading\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return Object.keys(this.uploadQueue).length < 1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    AppDialogUploadFilesComponent.prototype.onSubmit = /**\n     * @return {?}\n     */\n    function () {\n        this.dialogRef.close();\n    };\n    /**\n     * @return {?}\n     */\n    AppDialogUploadFilesComponent.prototype.onCancel = /**\n     * @return {?}\n     */\n    function () {\n        this.dialogRef.close();\n    };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    AppDialogUploadFilesComponent.prototype.onProcessingBegin = /**\n     * @param {?} $event\n     * @return {?}\n     */\n    function ($event) {\n        /** @type {?} */\n        var uuid = $event.upload.uuid;\n        this.logger.info('onProcessingBegin', { $event: $event, uuid: uuid });\n        this.addToQueue(uuid);\n    };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    AppDialogUploadFilesComponent.prototype.onUploadSuccess = /**\n     * @param {?} $event\n     * @return {?}\n     */\n    function ($event) {\n        /** @type {?} */\n        var file = $event.shift();\n        /** @type {?} */\n        var uuid = file.upload.uuid;\n        this.logger.info('onUploadSuccess', { $event: $event, uuid: uuid });\n        this.removeFromQueue(uuid);\n    };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    AppDialogUploadFilesComponent.prototype.onError = /**\n     * @param {?} $event\n     * @return {?}\n     */\n    function ($event) {\n        /** @type {?} */\n        var file = $event.shift();\n        /** @type {?} */\n        var uuid = file.upload.uuid;\n        /** @type {?} */\n        var message = $event.shift();\n        console.error('Error uploading file to server', { $event: $event });\n        this.notifications.notify('Error uploading file: ' + message, 'Upload Error');\n        this.removeFromQueue(uuid);\n    };\n    /**\n     * @param {?} uuid\n     * @return {?}\n     */\n    AppDialogUploadFilesComponent.prototype.addToQueue = /**\n     * @param {?} uuid\n     * @return {?}\n     */\n    function (uuid) {\n        this.uploadQueue[uuid] = true;\n    };\n    /**\n     * @param {?} uuid\n     * @return {?}\n     */\n    AppDialogUploadFilesComponent.prototype.removeFromQueue = /**\n     * @param {?} uuid\n     * @return {?}\n     */\n    function (uuid) {\n        delete this.uploadQueue[uuid];\n    };\n    AppDialogUploadFilesComponent.decorators = [\n        { type: Component, args: [{\n                    // tslint:disable-next-line:component-selector\n                    selector: 'ngx-filemanager-upload-files-dialog',\n                    template: \"\\n    <base-dialog\\n      [header]=\\\"headerTemplate\\\"\\n      [body]=\\\"bodyTemplate\\\"\\n      [actions]=\\\"actionsTemplate\\\"\\n    >\\n      <ng-template #headerTemplate>\\n        <h2>Upload Files</h2>\\n        <h5>To Folder: {{ currentDirectory }}</h5>\\n      </ng-template>\\n      <ng-template #bodyTemplate>\\n        <dropzone\\n          *ngIf=\\\"dropzoneConfig\\\"\\n          [config]=\\\"dropzoneConfig\\\"\\n          (success)=\\\"onUploadSuccess($event)\\\"\\n          (processing)=\\\"onProcessingBegin($event)\\\"\\n          (error)=\\\"onError($event)\\\"\\n        ></dropzone>\\n      </ng-template>\\n      <ng-template #actionsTemplate>\\n        <btns-cancel-ok\\n          okIcon=\\\"done\\\"\\n          okLabel=\\\"Finish\\\"\\n          (clickedCancel)=\\\"onCancel()\\\"\\n          (clickedOk)=\\\"onSubmit()\\\"\\n          [okDisabled]=\\\"!isDoneUploading\\\"\\n        >\\n        </btns-cancel-ok>\\n      </ng-template>\\n    </base-dialog>\\n  \",\n                    styles: [\".is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.fit-content{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    AppDialogUploadFilesComponent.ctorParameters = function () { return [\n        { type: LoggerService },\n        { type: NotificationService },\n        { type: MatDialogRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }\n    ]; };\n    return AppDialogUploadFilesComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar ActionHandlersService = /** @class */ (function () {\n    function ActionHandlersService(clientFilesystem, optimisticFs, dialog, logger, notifications) {\n        this.clientFilesystem = clientFilesystem;\n        this.optimisticFs = optimisticFs;\n        this.dialog = dialog;\n        this.logger = logger;\n        this.notifications = notifications;\n    }\n    Object.defineProperty(ActionHandlersService.prototype, \"$CurrentPath\", {\n        // Getters\n        get: \n        // Getters\n        /**\n         * @return {?}\n         */\n        function () {\n            return this.optimisticFs.$CurrentPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActionHandlersService.prototype.GetCurrentPath = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.$CurrentPath.pipe(take(1)).toPromise()];\n            });\n        });\n    };\n    Object.defineProperty(ActionHandlersService.prototype, \"$CurrentPathIsRoot\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var _this = this;\n            return this.$CurrentPath.pipe(map((/**\n             * @param {?} p\n             * @return {?}\n             */\n            function (p) { return p === _this.config.virtualRoot; })));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActionHandlersService.prototype, \"$SelectedFile\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.optimisticFs.$SelectedFile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActionHandlersService.prototype, \"$FilesWithIcons\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.optimisticFs.$FilesWithIcons;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fileSystem\n     * @param {?} config\n     * @return {?}\n     */\n    ActionHandlersService.prototype.init = /**\n     * @param {?} fileSystem\n     * @param {?} config\n     * @return {?}\n     */\n    function (fileSystem, config) {\n        this.config = config;\n        this.fileSystem = fileSystem;\n        this.optimisticFs.initialize(this.fileSystem, this.clientFilesystem);\n    };\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    ActionHandlersService.prototype.OnRename = /**\n     * @param {?} file\n     * @return {?}\n     */\n    function (file) {\n        return __awaiter(this, void 0, void 0, function () {\n            var data, renamedPath, error_1;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        data = {\n                            currentPath: file.fullPath\n                        };\n                        this.logger.info('OnRename', { data: data });\n                        return [4 /*yield*/, this.openDialog(AppDialogRenameComponent, data)];\n                    case 1:\n                        renamedPath = _a.sent();\n                        if (!renamedPath) {\n                            this.notifications.notifyCancelled();\n                            return [2 /*return*/];\n                        }\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 5, , 6]);\n                        return [4 /*yield*/, this.optimisticFs.HandleRename(file.fullPath, renamedPath)];\n                    case 3:\n                        _a.sent();\n                        return [4 /*yield*/, this.RefreshExplorer()];\n                    case 4:\n                        _a.sent();\n                        setTimeout((/**\n                         * @return {?}\n                         */\n                        function () {\n                            _this.optimisticFs.onSelectItemByName(renamedPath);\n                        }), 300);\n                        return [3 /*break*/, 6];\n                    case 5:\n                        error_1 = _a.sent();\n                        this.logger.error('OnRename', { error: error_1 });\n                        this.notifications.notify(error_1.message, 'Rename Error');\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} files\n     * @return {?}\n     */\n    ActionHandlersService.prototype.OnMoveMultiple = /**\n     * @param {?} files\n     * @return {?}\n     */\n    function (files) {\n        return __awaiter(this, void 0, void 0, function () {\n            var data, newFolderPath, filePaths, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        data = {\n                            files: files,\n                            isCopy: false,\n                            serverFilesystem: this.fileSystem\n                        };\n                        return [4 /*yield*/, this.openDialog(AppDialogCopyComponent, data)];\n                    case 1:\n                        newFolderPath = _a.sent();\n                        if (!newFolderPath) {\n                            this.notifications.notifyCancelled();\n                            return [2 /*return*/];\n                        }\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 5, , 6]);\n                        filePaths = files.map((/**\n                         * @param {?} f\n                         * @return {?}\n                         */\n                        function (f) { return f.fullPath; }));\n                        return [4 /*yield*/, this.optimisticFs.HandleMoveMultiple(filePaths, newFolderPath)];\n                    case 3:\n                        _a.sent();\n                        return [4 /*yield*/, this.RefreshExplorer()];\n                    case 4:\n                        _a.sent();\n                        return [3 /*break*/, 6];\n                    case 5:\n                        error_2 = _a.sent();\n                        this.logger.error('OnMoveMultiple', { error: error_2 });\n                        this.notifications.notify(error_2.message, 'Move Error');\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} files\n     * @return {?}\n     */\n    ActionHandlersService.prototype.OnCopyMultiple = /**\n     * @param {?} files\n     * @return {?}\n     */\n    function (files) {\n        return __awaiter(this, void 0, void 0, function () {\n            var data, newFolderPath, filePaths, error_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        data = {\n                            files: files,\n                            isCopy: true,\n                            serverFilesystem: this.fileSystem\n                        };\n                        return [4 /*yield*/, this.openDialog(AppDialogCopyComponent, data)];\n                    case 1:\n                        newFolderPath = _a.sent();\n                        this.logger.info('OnCopyMultiple', { files: files, newFolderPath: newFolderPath });\n                        if (!newFolderPath) {\n                            this.notifications.notifyCancelled();\n                            return [2 /*return*/];\n                        }\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 5, , 6]);\n                        filePaths = files.map((/**\n                         * @param {?} f\n                         * @return {?}\n                         */\n                        function (f) { return f.fullPath; }));\n                        return [4 /*yield*/, this.optimisticFs.HandleCopyMultiple(filePaths, newFolderPath)];\n                    case 3:\n                        _a.sent();\n                        return [4 /*yield*/, this.RefreshExplorer()];\n                    case 4:\n                        _a.sent();\n                        return [3 /*break*/, 6];\n                    case 5:\n                        error_3 = _a.sent();\n                        this.logger.error('OnCopyMultiple', { error: error_3 });\n                        this.notifications.notify(error_3.message, 'Copy Error');\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} files\n     * @return {?}\n     */\n    ActionHandlersService.prototype.OnSetPermissionsMultiple = /**\n     * @param {?} files\n     * @return {?}\n     */\n    function (files) {\n        return __awaiter(this, void 0, void 0, function () {\n            var data, res, filePaths, error_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        data = {\n                            files: files,\n                            config: this.config\n                        };\n                        try {\n                            if (!this.config.users) {\n                                throw new Error('The \"config.users\" property was not defined');\n                            }\n                            if (!this.config.groups) {\n                                throw new Error('The \"config.groups\" property was not defined');\n                            }\n                        }\n                        catch (error) {\n                            this.notifications.notify(error.message, 'Permissions Error');\n                            return [2 /*return*/];\n                        }\n                        return [4 /*yield*/, this.openDialog(AppDialogSetPermissionsComponent, data)];\n                    case 1:\n                        res = _a.sent();\n                        if (!res) {\n                            this.notifications.notifyCancelled();\n                            return [2 /*return*/];\n                        }\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 5, , 6]);\n                        filePaths = files.map((/**\n                         * @param {?} f\n                         * @return {?}\n                         */\n                        function (f) { return f.fullPath; }));\n                        return [4 /*yield*/, this.optimisticFs.HandleSetPermissionsMultiple(filePaths, res.role, res.entity, true)];\n                    case 3:\n                        _a.sent();\n                        return [4 /*yield*/, this.RefreshExplorer()];\n                    case 4:\n                        _a.sent();\n                        return [3 /*break*/, 6];\n                    case 5:\n                        error_4 = _a.sent();\n                        this.logger.error('OnSetPermissionsMultiple', { error: error_4 });\n                        this.notifications.notify(error_4.message, 'Permissions Error');\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} files\n     * @return {?}\n     */\n    ActionHandlersService.prototype.OnDeleteMultiple = /**\n     * @param {?} files\n     * @return {?}\n     */\n    function (files) {\n        return __awaiter(this, void 0, void 0, function () {\n            var deletedPaths, error_5;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 3, , 4]);\n                        deletedPaths = files.map((/**\n                         * @param {?} f\n                         * @return {?}\n                         */\n                        function (f) { return f.fullPath; }));\n                        this.logger.info('deleting files', { files: files, deletedPaths: deletedPaths });\n                        return [4 /*yield*/, this.optimisticFs.HandleRemove(deletedPaths)];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.RefreshExplorer()];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_5 = _a.sent();\n                        this.logger.error('OnDeleteMultiple', { error: error_5 });\n                        this.notifications.notify(error_5.message, 'Deletion Error');\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // Misc\n    // Misc\n    /**\n     * @param {?} folderPath\n     * @return {?}\n     */\n    ActionHandlersService.prototype.OnNavigateTo = \n    // Misc\n    /**\n     * @param {?} folderPath\n     * @return {?}\n     */\n    function (folderPath) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.logger.info('action-handlers.OnNavigateTo', { folderPath: folderPath });\n                this.optimisticFs.HandleList(folderPath);\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    ActionHandlersService.prototype.OnNavigateToParent = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.logger.info('OnNavigateToParent');\n                        return [4 /*yield*/, this.optimisticFs.HandleNavigateUp()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} itemPath\n     * @return {?}\n     */\n    ActionHandlersService.prototype.OnSelectItemByPath = /**\n     * @param {?} itemPath\n     * @return {?}\n     */\n    function (itemPath) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.optimisticFs.onSelectItemByName(itemPath);\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    ActionHandlersService.prototype.OnUploadFilesToCurrentDirectory = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentPath, data, res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.logger.info('onClickUpload');\n                        return [4 /*yield*/, this.GetCurrentPath()];\n                    case 1:\n                        currentPath = _a.sent();\n                        data = {\n                            currentPath: currentPath,\n                            uploadApiUrl: this.fileSystem.GetUploadApiUrl(currentPath)\n                        };\n                        return [4 /*yield*/, this.openDialog(AppDialogUploadFilesComponent, data)];\n                    case 2:\n                        res = _a.sent();\n                        return [4 /*yield*/, this.optimisticFs.HandleList(currentPath)];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    ActionHandlersService.prototype.OnNewFolderInCurrentDirectory = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var newDirName, currentDirectory, newDirectoryPath;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.logger.info('onClickNewFolder');\n                        return [4 /*yield*/, this.openDialog(AppDialogNewFolderComponent)];\n                    case 1:\n                        newDirName = _a.sent();\n                        if (!newDirName) {\n                            this.logger.info('onClickNewFolder   no folder created...');\n                            return [2 /*return*/];\n                        }\n                        return [4 /*yield*/, this.GetCurrentPath()];\n                    case 2:\n                        currentDirectory = _a.sent();\n                        newDirectoryPath = join(currentDirectory, newDirName);\n                        return [4 /*yield*/, this.optimisticFs.HandleCreateFolder(newDirectoryPath)];\n                    case 3:\n                        _a.sent();\n                        return [4 /*yield*/, this.optimisticFs.HandleList(currentDirectory)];\n                    case 4:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    ActionHandlersService.prototype.OnDownloadFile = /**\n     * @param {?} file\n     * @return {?}\n     */\n    function (file) {\n        return __awaiter(this, void 0, void 0, function () {\n            var url, link;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.fileSystem.CreateDownloadLink(file)];\n                    case 1:\n                        url = _a.sent();\n                        this.logger.info('downloading file', { file: file, url: url });\n                        link = document.createElement('a');\n                        link.download = file.name;\n                        link.target = '_blank';\n                        link.href = url;\n                        link.click();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    ActionHandlersService.prototype.RefreshExplorer = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentPath;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.GetCurrentPath()];\n                    case 1:\n                        currentPath = _a.sent();\n                        this.optimisticFs.HandleList(currentPath);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @private\n     * @param {?} comp\n     * @param {?=} data\n     * @return {?}\n     */\n    ActionHandlersService.prototype.openDialog = /**\n     * @private\n     * @param {?} comp\n     * @param {?=} data\n     * @return {?}\n     */\n    function (comp, data) {\n        return __awaiter(this, void 0, void 0, function () {\n            var ref, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        ref = this.dialog.open(comp, {\n                            width: '400px',\n                            hasBackdrop: true,\n                            disableClose: false,\n                            data: data\n                        });\n                        return [4 /*yield*/, ref\n                                .afterClosed()\n                                .pipe(take(1))\n                                .toPromise()];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    ActionHandlersService.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    ActionHandlersService.ctorParameters = function () { return [\n        { type: ClientFileSystemService },\n        { type: OptimisticFilesystemService },\n        { type: MatDialog },\n        { type: LoggerService },\n        { type: NotificationService }\n    ]; };\n    return ActionHandlersService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgxFileManagerComponent = /** @class */ (function () {\n    function NgxFileManagerComponent(actionHandlers, logger) {\n        this.actionHandlers = actionHandlers;\n        this.logger = logger;\n        this.isFileDetailsOpen = true;\n        this.$BulkSelected = new BehaviorSubject([]);\n        this.$triggerClearSelected = new Subject();\n    }\n    Object.defineProperty(NgxFileManagerComponent.prototype, \"$CurrentPath\", {\n        // Getters\n        get: \n        // Getters\n        /**\n         * @return {?}\n         */\n        function () {\n            return this.actionHandlers.$CurrentPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgxFileManagerComponent.prototype, \"$CurrentPathIsRoot\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.actionHandlers.$CurrentPathIsRoot;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgxFileManagerComponent.prototype, \"$SelectedFile\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.actionHandlers.$SelectedFile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgxFileManagerComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (!this.fileSystem) {\n                    throw new Error('<ngx-filemanager> must have input selector [fileSystem] set');\n                }\n                if (!this.config) {\n                    throw new Error('<ngx-filemanager> must have input selector [config] set');\n                }\n                this.actionHandlers.init(this.fileSystem, this.config);\n                this.makeConfig();\n                if (this.config && this.config.virtualRoot) {\n                    this.actionHandlers.OnNavigateTo(this.config.virtualRoot);\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    NgxFileManagerComponent.prototype.makeConfig = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.autoTableConfig = {\n            data$: this.actionHandlers.$FilesWithIcons,\n            // debug: true,\n            actionsBulk: [\n                {\n                    label: 'Copy',\n                    icon: 'content_copy',\n                    onClick: (/**\n                     * @param {?} files\n                     * @return {?}\n                     */\n                    function (files) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                        return [2 /*return*/, this.actionHandlers.OnCopyMultiple(files)];\n                    }); }); })\n                }\n            ],\n            actions: [\n                {\n                    label: 'Copy',\n                    icon: 'content_copy',\n                    onClick: (/**\n                     * @param {?} file\n                     * @return {?}\n                     */\n                    function (file) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                        return [2 /*return*/, this.actionHandlers.OnCopyMultiple([file])];\n                    }); }); })\n                },\n                {\n                    label: 'Move',\n                    icon: 'forward',\n                    onClick: (/**\n                     * @param {?} file\n                     * @return {?}\n                     */\n                    function (file) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                        return [2 /*return*/, this.actionHandlers.OnMoveMultiple([file])];\n                    }); }); })\n                },\n                {\n                    label: 'Rename',\n                    icon: 'border_color',\n                    onClick: (/**\n                     * @param {?} file\n                     * @return {?}\n                     */\n                    function (file) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                        return [2 /*return*/, this.actionHandlers.OnRename(file)];\n                    }); }); })\n                },\n                {\n                    label: 'Permissions',\n                    icon: 'lock_outline',\n                    onClick: (/**\n                     * @param {?} file\n                     * @return {?}\n                     */\n                    function (file) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                        return [2 /*return*/, this.actionHandlers.OnSetPermissionsMultiple([file])];\n                    }); }); })\n                },\n                {\n                    label: 'Delete',\n                    icon: 'delete',\n                    onClick: (/**\n                     * @param {?} file\n                     * @return {?}\n                     */\n                    function (file) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                        return [2 /*return*/, this.actionHandlers.OnDeleteMultiple([file])];\n                    }); }); })\n                }\n            ],\n            onSelectedBulk: (/**\n             * @param {?} files\n             * @return {?}\n             */\n            function (files) {\n                _this.logger.info('onSelectedBulk', {\n                    files: files,\n                    length: files.length\n                });\n                _this.$BulkSelected.next(files);\n            }),\n            onSelectItemDoubleClick: (/**\n             * @param {?} item\n             * @return {?}\n             */\n            function (item) { return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    this.logger.info('onSelectItemDoubleClick!', { item: item });\n                    if (item.type === 'dir') {\n                        this.clearBulkSelected();\n                        this.actionHandlers.OnNavigateTo(item.fullPath);\n                    }\n                    return [2 /*return*/];\n                });\n            }); }),\n            onSelectItem: (/**\n             * @param {?} item\n             * @return {?}\n             */\n            function (item) {\n                _this.logger.info('onSelectItem!', { item: item });\n                _this.actionHandlers.OnSelectItemByPath(item.fullPath);\n            }),\n            $triggerSelectItem: this.$SelectedFile,\n            $triggerClearSelected: this.$triggerClearSelected,\n            filterText: 'Search here...',\n            hideChooseColumns: true,\n            hideFilter: true\n        };\n    };\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    NgxFileManagerComponent.prototype.onDetailsClickDelete = /**\n     * @param {?} file\n     * @return {?}\n     */\n    function (file) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.actionHandlers.OnDeleteMultiple([file])];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    NgxFileManagerComponent.prototype.onDetailsClickDownload = /**\n     * @param {?} file\n     * @return {?}\n     */\n    function (file) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.actionHandlers.OnDownloadFile(file)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    NgxFileManagerComponent.prototype.onDetailsClickRename = /**\n     * @param {?} file\n     * @return {?}\n     */\n    function (file) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.actionHandlers.OnRename(file)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    NgxFileManagerComponent.prototype.onDetailsClickSinglePermissions = /**\n     * @param {?} file\n     * @return {?}\n     */\n    function (file) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.actionHandlers.OnSetPermissionsMultiple([file])];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.actionHandlers.OnSelectItemByPath(file.fullPath)];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    NgxFileManagerComponent.prototype.onClickNewFolder = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.actionHandlers.OnNewFolderInCurrentDirectory()];\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    NgxFileManagerComponent.prototype.onClickUpFolder = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.actionHandlers.OnNavigateToParent()];\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    NgxFileManagerComponent.prototype.onClickUploadFiles = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.actionHandlers.OnUploadFilesToCurrentDirectory()];\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    NgxFileManagerComponent.prototype.onClickRefresh = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.actionHandlers.RefreshExplorer()];\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    NgxFileManagerComponent.prototype.onClickedCancelBulk = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.logger.info('onClickCancelBulk');\n                this.clearBulkSelected();\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    NgxFileManagerComponent.prototype.onClickedBulkCopy = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var selected, selectedCopied;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.$BulkSelected.pipe(take(1)).toPromise()];\n                    case 1:\n                        selected = _a.sent();\n                        selectedCopied = __spread(selected);\n                        this.logger.info('clickedBulkCopy', { selectedCopied: selectedCopied });\n                        return [4 /*yield*/, this.actionHandlers.OnCopyMultiple(selectedCopied)];\n                    case 2:\n                        _a.sent();\n                        this.clearBulkSelected();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    NgxFileManagerComponent.prototype.onClickedBulkMove = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var selected;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.$BulkSelected.pipe(take(1)).toPromise()];\n                    case 1:\n                        selected = _a.sent();\n                        this.logger.info('clickedBulkMove', { selected: selected });\n                        return [4 /*yield*/, this.actionHandlers.OnMoveMultiple(selected)];\n                    case 2:\n                        _a.sent();\n                        this.clearBulkSelected();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    NgxFileManagerComponent.prototype.onClickedBulkDelete = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var selected;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.$BulkSelected.pipe(take(1)).toPromise()];\n                    case 1:\n                        selected = _a.sent();\n                        this.clearBulkSelected();\n                        return [2 /*return*/, this.actionHandlers.OnDeleteMultiple(selected)];\n                }\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    NgxFileManagerComponent.prototype.onClickedBulkPermissions = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var selected;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.logger.info('clickedBulkPermissions');\n                        return [4 /*yield*/, this.$BulkSelected.pipe(take(1)).toPromise()];\n                    case 1:\n                        selected = _a.sent();\n                        return [4 /*yield*/, this.actionHandlers.OnSetPermissionsMultiple(selected)];\n                    case 2:\n                        _a.sent();\n                        this.clearBulkSelected();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} newPath\n     * @return {?}\n     */\n    NgxFileManagerComponent.prototype.onClickCrumb = /**\n     * @param {?} newPath\n     * @return {?}\n     */\n    function (newPath) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.clearBulkSelected();\n                this.logger.info('onClickCrumb', { newPath: newPath });\n                return [2 /*return*/, this.actionHandlers.OnNavigateTo(newPath)];\n            });\n        });\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    NgxFileManagerComponent.prototype.clearBulkSelected = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        this.$triggerClearSelected.next();\n        this.$BulkSelected.next([]);\n    };\n    NgxFileManagerComponent.decorators = [\n        { type: Component, args: [{\n                    // tslint:disable-next-line:component-selector\n                    selector: 'ngx-filemanager',\n                    template: \"<div class=\\\"page-container\\\">\\n  <mat-drawer-container>\\n    <mat-drawer-content>\\n      <div\\n        class=\\\"bulk-actions-container\\\"\\n        [class.hidden]=\\\"($BulkSelected | async).length < 1\\\"\\n      >\\n        <bulk-actions\\n          (clickedCancelBulk)=\\\"this.onClickedCancelBulk()\\\"\\n          (clickedBulkCopy)=\\\"this.onClickedBulkCopy()\\\"\\n          (clickedBulkMove)=\\\"this.onClickedBulkMove()\\\"\\n          (clickedBulkPermissions)=\\\"this.onClickedBulkPermissions()\\\"\\n          (clickedBulkDelete)=\\\"this.onClickedBulkDelete()\\\"\\n        >\\n        </bulk-actions>\\n      </div>\\n      <div class=\\\"folder-actions-container\\\">\\n        <folder-actions\\n          (clickedNewFolder)=\\\"this.onClickNewFolder()\\\"\\n          (clickedUpFolder)=\\\"this.onClickUpFolder()\\\"\\n          (clickedRefresh)=\\\"this.onClickRefresh()\\\"\\n          (clickedUploadFiles)=\\\"this.onClickUploadFiles()\\\"\\n          [$CurrentPathIsRoot]=\\\"$CurrentPathIsRoot\\\"\\n        >\\n        </folder-actions>\\n      </div>\\n      <div class=\\\"flex-h space-between\\\">\\n        <bread-crumbs\\n          [currentPath]=\\\"$CurrentPath | async\\\"\\n          (clickedCrumb)=\\\"this.onClickCrumb($event)\\\"\\n          [config]=\\\"config\\\"\\n        >\\n        </bread-crumbs>\\n        <div\\n          class=\\\"mat-elevation-z8 expander-container has-pointer mat-table\\\"\\n          (click)=\\\"isFileDetailsOpen = !isFileDetailsOpen\\\"\\n        >\\n          <mat-icon\\n            matTooltip=\\\"View File Details\\\"\\n            class=\\\"expander-icon\\\"\\n            [class.drawer-out]=\\\"isFileDetailsOpen\\\"\\n            [class.drawer-in]=\\\"!isFileDetailsOpen\\\"\\n            >expand_more</mat-icon\\n          >\\n        </div>\\n      </div>\\n      <app-file-table [config]=\\\"autoTableConfig\\\"> </app-file-table>\\n    </mat-drawer-content>\\n    <mat-drawer\\n      #drawer\\n      [(opened)]=\\\"isFileDetailsOpen\\\"\\n      class=\\\"history-drawer\\\"\\n      mode=\\\"side\\\"\\n      position=\\\"end\\\"\\n      opened\\n    >\\n      <ngx-filemanager-file-details\\n        [file]=\\\"$SelectedFile | async\\\"\\n        [fileSystem]=\\\"fileSystem\\\"\\n        (clickedDelete)=\\\"this.onDetailsClickDelete($event)\\\"\\n        (clickedDownload)=\\\"this.onDetailsClickDownload($event)\\\"\\n        (clickedRename)=\\\"this.onDetailsClickRename($event)\\\"\\n        (clickedSetPermissions)=\\\"this.onDetailsClickSinglePermissions($event)\\\"\\n      >\\n      </ngx-filemanager-file-details>\\n    </mat-drawer>\\n  </mat-drawer-container>\\n</div>\\n\",\n                    providers: [\n                        ActionHandlersService,\n                        ClientFileSystemService,\n                        OptimisticFilesystemService\n                    ],\n                    styles: [\".heading{font-family:sans-serif;margin-left:10px}mat-drawer{width:300px}mat-drawer-container{width:100%}.page-container{height:calc(100% - 65px);display:flex}.expander-container{flex-direction:row-reverse;right:0;top:0;display:flex;align-items:center;z-index:1;cursor:pointer}.expander-icon{transition:transform .5s;transition:transform .5s,-webkit-transform .5s;font-size:2em;width:1em;height:1em}.bulk-actions-container{position:absolute;overflow:hidden;height:80px;width:100%;z-index:2;transition:top .7s;top:0}.hidden{top:-90px}.drawer-out{-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}.drawer-in{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.flex-h{display:flex;flex-direction:row;align-items:center}.space-between{justify-content:space-between}button.top{margin-left:10px}\", \".is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.fit-content{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    NgxFileManagerComponent.ctorParameters = function () { return [\n        { type: ActionHandlersService },\n        { type: LoggerService }\n    ]; };\n    NgxFileManagerComponent.propDecorators = {\n        fileSystem: [{ type: Input }],\n        config: [{ type: Input }]\n    };\n    return NgxFileManagerComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} ms\n * @return {?}\n */\nfunction promiseDelay(ms) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, new Promise((/**\n                 * @param {?} resolve\n                 * @return {?}\n                 */\n                function (resolve) { return setTimeout(resolve, ms); }))];\n        });\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar FileDetailsComponent = /** @class */ (function () {\n    function FileDetailsComponent() {\n        this.clickedDownload = new EventEmitter();\n        this.clickedDelete = new EventEmitter();\n        this.clickedRename = new EventEmitter();\n        this.clickedSetPermissions = new EventEmitter();\n    }\n    Object.defineProperty(FileDetailsComponent.prototype, \"file\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._file;\n        },\n        set: /**\n         * @param {?} newFile\n         * @return {?}\n         */\n        function (newFile) {\n            this._file = newFile;\n            this.setImageUrl();\n            this.setPermissions();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    FileDetailsComponent.prototype.getFileType = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        return guesser.getFileIconName(fileName);\n    };\n    Object.defineProperty(FileDetailsComponent.prototype, \"hasInput\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return !!this.file;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FileDetailsComponent.prototype, \"isFile\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.file.type === 'file';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FileDetailsComponent.prototype, \"isImage\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return guesser.getFileIconName(this.file.name) === 'image';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FileDetailsComponent.prototype.setImageUrl = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, error_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.imageUrl = null;\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, promiseDelay(300)];\n                    case 2:\n                        _b.sent();\n                        if (!this.hasInput || !this.isFile) {\n                            return [2 /*return*/];\n                        }\n                        _a = this;\n                        return [4 /*yield*/, this.fileSystem.CreateDownloadLink(this.file)];\n                    case 3:\n                        _a.imageUrl = _b.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        error_1 = _b.sent();\n                        console.error('Error setting ImageUrl', { error: error_1 });\n                        return [3 /*break*/, 5];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    FileDetailsComponent.prototype.setPermissions = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._file || !this._file.metaData) {\n            return;\n        }\n        try {\n            /** @type {?} */\n            var permissions = this._file.permissions;\n            this.readers = permissions.readers;\n            this.writers = permissions.writers;\n            this.owners = permissions.owners;\n        }\n        catch (error) {\n            console.error('file-details: setPermissions', {\n                error: error,\n                file: this._file\n            });\n        }\n    };\n    FileDetailsComponent.decorators = [\n        { type: Component, args: [{\n                    // tslint:disable-next-line:component-selector\n                    selector: 'ngx-filemanager-file-details',\n                    template: \"\\n    <div class=\\\"details-container p5\\\">\\n      <div *ngIf=\\\"!hasInput\\\" class=\\\"none-selected\\\">\\n        <h2>No item selected ...</h2>\\n      </div>\\n      <div *ngIf=\\\"hasInput\\\">\\n        <span class=\\\"flex-row space-between align-center\\\">\\n          <h2 *ngIf=\\\"isFile\\\">File Details</h2>\\n          <h2 *ngIf=\\\"!isFile\\\">Directory Details</h2>\\n          <span>\\n            <button\\n              mat-mini-fab\\n              color=\\\"warn\\\"\\n              class=\\\"has-pointer\\\"\\n              (click)=\\\"this.clickedDelete.emit(file)\\\"\\n            >\\n              <mat-icon>delete</mat-icon>\\n            </button>\\n          </span>\\n        </span>\\n        <h5>Name</h5>\\n        <span class=\\\"flex-row align-center\\\">\\n          <h6 class=\\\"filename\\\">{{ file.name }}</h6>\\n          <button\\n            mat-mini-fab\\n            color=\\\"primary\\\"\\n            class=\\\"has-pointer\\\"\\n            (click)=\\\"this.clickedRename.emit(file)\\\"\\n          >\\n            <mat-icon>border_color</mat-icon>\\n          </button>\\n        </span>\\n        <h5>Size</h5>\\n        <h6>{{ file.size | fileSize }}</h6>\\n        <h5>Date</h5>\\n        <h6>{{ file.date | date: 'short' }}</h6>\\n        <span class=\\\"flex-row align-center\\\">\\n          <h5>Permissions</h5>\\n          <button\\n            mat-mini-fab\\n            color=\\\"primary\\\"\\n            class=\\\"has-pointer\\\"\\n            (click)=\\\"this.clickedSetPermissions.emit(file)\\\"\\n          >\\n            <mat-icon>lock_outline</mat-icon>\\n          </button>\\n        </span>\\n        <div>\\n          <h6 *ngIf=\\\"owners && owners.length\\\">Owners</h6>\\n          <p *ngFor=\\\"let entity of owners\\\">\\n            {{ entity.name }}\\n          </p>\\n          <h6 *ngIf=\\\"writers && writers.length\\\">Writers</h6>\\n          <p *ngFor=\\\"let entity of writers\\\">\\n            {{ entity.name }}\\n          </p>\\n          <h6 *ngIf=\\\"readers && readers.length\\\">readers</h6>\\n          <p *ngFor=\\\"let entity of readers\\\">\\n            {{ entity.name }}\\n          </p>\\n        </div>\\n        <h5>Full Path</h5>\\n        <h6>{{ file.fullPath }}</h6>\\n        <h5>Type</h5>\\n        <h6 *ngIf=\\\"!isFile\\\">Directory</h6>\\n        <h6 *ngIf=\\\"isFile\\\" class=\\\"capitalize\\\">{{ getFileType(file.name) }}</h6>\\n        <button\\n          *ngIf=\\\"isFile\\\"\\n          mat-mini-fab\\n          color=\\\"primary\\\"\\n          class=\\\"has-pointer\\\"\\n          (click)=\\\"this.clickedDownload.emit(file)\\\"\\n        >\\n          <mat-icon>open_in_new</mat-icon>\\n        </button>\\n        <div class=\\\"preview\\\" [class.hidden]=\\\"!(isImage && imageUrl)\\\">\\n          <h5>Preview</h5>\\n          <div class=\\\"has-pointer\\\" (click)=\\\"this.clickedDownload.emit(file)\\\">\\n            <img *ngIf=\\\"imageUrl\\\" [src]=\\\"imageUrl\\\" />\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  \",\n                    styles: [\"\\n      .filename {\\n        margin: 0px;\\n        padding-right: 10px;\\n      }\\n      .none-selected {\\n        color: grey;\\n        text-align: center;\\n        width: 100%;\\n        margin-top: 100px;\\n      }\\n      h2,\\n      h5,\\n      h6 {\\n        font-family: sans-serif;\\n      }\\n      h5 {\\n        margin: 0px;\\n      }\\n      h6 {\\n        margin: 0px;\\n        font-size: 1em;\\n        overflow-wrap: break-word;\\n        font-weight: normal;\\n        margin-bottom: 10px;\\n      }\\n      img {\\n        max-width: 100%;\\n        max-height: 400px;\\n      }\\n      .preview {\\n        opacity: 1;\\n        transition: opacity 1s;\\n      }\\n      .hidden {\\n        opacity: 0;\\n        height: 0px;\\n        overflow: hidden;\\n      }\\n    \", \".is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.fit-content{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}\"]\n                }] }\n    ];\n    FileDetailsComponent.propDecorators = {\n        file: [{ type: Input }],\n        fileSystem: [{ type: Input }],\n        clickedDownload: [{ type: Output }],\n        clickedDelete: [{ type: Output }],\n        clickedRename: [{ type: Output }],\n        clickedSetPermissions: [{ type: Output }]\n    };\n    return FileDetailsComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/*\n * Convert bytes into largest possible unit.\n * Takes an precision argument that defaults to 2.\n * Usage:\n *   bytes | fileSize:precision\n * Example:\n *   {{ 1024 |  fileSize}}\n *   formats to: 1 KB\n*/\nvar FileSizePipe = /** @class */ (function () {\n    function FileSizePipe() {\n        this.units = [\n            'bytes',\n            'KB',\n            'MB',\n            'GB',\n            'TB',\n            'PB'\n        ];\n    }\n    /**\n     * @param {?} bytesInput\n     * @param {?=} precision\n     * @return {?}\n     */\n    FileSizePipe.prototype.transform = /**\n     * @param {?} bytesInput\n     * @param {?=} precision\n     * @return {?}\n     */\n    function (bytesInput, precision) {\n        if (precision === void 0) { precision = 0; }\n        /** @type {?} */\n        var bytes = +bytesInput;\n        if (!isFinite(bytes)) {\n            return '?';\n        }\n        /** @type {?} */\n        var unit = 0;\n        while (bytes >= 1024) {\n            bytes /= 1024;\n            unit++;\n        }\n        return bytes.toFixed(+precision) + ' ' + this.units[unit];\n    };\n    FileSizePipe.decorators = [\n        { type: Pipe, args: [{ name: 'fileSize' },] }\n    ];\n    return FileSizePipe;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar ServerFilesystemProviderService = /** @class */ (function () {\n    function ServerFilesystemProviderService(http, logger, notifications) {\n        this.http = http;\n        this.logger = logger;\n        this.notifications = notifications;\n    }\n    /**\n     * @private\n     * @template T\n     * @param {?} url\n     * @param {?} body\n     * @return {?}\n     */\n    ServerFilesystemProviderService.prototype.fetchPostAuth = /**\n     * @private\n     * @template T\n     * @param {?} url\n     * @param {?} body\n     * @return {?}\n     */\n    function (url, body) {\n        return __awaiter(this, void 0, void 0, function () {\n            var options, response, error_1, errorStr;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        options = {\n                            headers: {}\n                        };\n                        options['responseType'] = 'json';\n                        options.headers['Content-Type'] = 'application/json';\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.http.post(url, body, options).toPromise()];\n                    case 2:\n                        response = _a.sent();\n                        this.logger.info('fetchPostAuth: ', {\n                            action: body.action,\n                            reqBody: body,\n                            resBody: response\n                        });\n                        return [2 /*return*/, (/** @type {?} */ (response))];\n                    case 3:\n                        error_1 = _a.sent();\n                        errorStr = void 0;\n                        try {\n                            errorStr = JSON.stringify(error_1.error, null, 4);\n                        }\n                        catch (jsonError) {\n                            errorStr = 'Could not parse error response: ' + error_1.error;\n                        }\n                        this.notifications.notify('Cannot connect to file server...', 'API Error');\n                        throw new Error('API Error: ' + error_1.message + ', ' + errorStr);\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @private\n     * @param {?} action\n     * @return {?}\n     */\n    ServerFilesystemProviderService.prototype.makeBaseRequest = /**\n     * @private\n     * @param {?} action\n     * @return {?}\n     */\n    function (action) {\n        return {\n            action: action,\n            bucketname: this.bucketname\n        };\n    };\n    /**\n     * @param {?} bucketname\n     * @param {?} apiEndpoint\n     * @return {?}\n     */\n    ServerFilesystemProviderService.prototype.Initialize = /**\n     * @param {?} bucketname\n     * @param {?} apiEndpoint\n     * @return {?}\n     */\n    function (bucketname, apiEndpoint) {\n        this.bucketname = bucketname;\n        this.apiEndpoint = apiEndpoint;\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    ServerFilesystemProviderService.prototype.List = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        /** @type {?} */\n        var req = __assign({}, this.makeBaseRequest('list'), { path: path });\n        return this.fetchPostAuth(this.apiEndpoint, req);\n    };\n    /**\n     * @param {?} newPath\n     * @return {?}\n     */\n    ServerFilesystemProviderService.prototype.CreateFolder = /**\n     * @param {?} newPath\n     * @return {?}\n     */\n    function (newPath) {\n        /** @type {?} */\n        var req = __assign({}, this.makeBaseRequest('createFolder'), { newPath: newPath });\n        return this.fetchPostAuth(this.apiEndpoint, req);\n    };\n    /**\n     * @param {?} singleFileName\n     * @param {?} newPath\n     * @return {?}\n     */\n    ServerFilesystemProviderService.prototype.Copy = /**\n     * @param {?} singleFileName\n     * @param {?} newPath\n     * @return {?}\n     */\n    function (singleFileName, newPath) {\n        /** @type {?} */\n        var req = __assign({}, this.makeBaseRequest('copy'), { singleFileName: singleFileName, newPath: newPath });\n        return this.fetchPostAuth(this.apiEndpoint, req);\n    };\n    /**\n     * @param {?} item\n     * @param {?} newPath\n     * @return {?}\n     */\n    ServerFilesystemProviderService.prototype.Move = /**\n     * @param {?} item\n     * @param {?} newPath\n     * @return {?}\n     */\n    function (item, newPath) {\n        /** @type {?} */\n        var req = __assign({}, this.makeBaseRequest('move'), { items: [item], newPath: newPath });\n        return this.fetchPostAuth(this.apiEndpoint, req);\n    };\n    /**\n     * @param {?} item\n     * @param {?} newItemPath\n     * @return {?}\n     */\n    ServerFilesystemProviderService.prototype.Rename = /**\n     * @param {?} item\n     * @param {?} newItemPath\n     * @return {?}\n     */\n    function (item, newItemPath) {\n        /** @type {?} */\n        var req = __assign({}, this.makeBaseRequest('rename'), { item: item, newItemPath: newItemPath });\n        return this.fetchPostAuth(this.apiEndpoint, req);\n    };\n    /**\n     * @param {?} item\n     * @param {?} content\n     * @return {?}\n     */\n    ServerFilesystemProviderService.prototype.Edit = /**\n     * @param {?} item\n     * @param {?} content\n     * @return {?}\n     */\n    function (item, content) {\n        /** @type {?} */\n        var req = __assign({}, this.makeBaseRequest('edit'), { item: item, content: content });\n        return this.fetchPostAuth(this.apiEndpoint, req);\n    };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    ServerFilesystemProviderService.prototype.Getcontent = /**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        /** @type {?} */\n        var req = __assign({}, this.makeBaseRequest('getContent'), { item: item });\n        return this.fetchPostAuth(this.apiEndpoint, req);\n    };\n    /**\n     * @param {?} item\n     * @param {?} role\n     * @param {?} entity\n     * @param {?=} recursive\n     * @return {?}\n     */\n    ServerFilesystemProviderService.prototype.SetPermissions = /**\n     * @param {?} item\n     * @param {?} role\n     * @param {?} entity\n     * @param {?=} recursive\n     * @return {?}\n     */\n    function (item, role, entity, recursive) {\n        /** @type {?} */\n        var req = __assign({}, this.makeBaseRequest('changePermissions'), { items: [item], role: role, entity: entity, recursive: recursive });\n        return this.fetchPostAuth(this.apiEndpoint, req);\n    };\n    /**\n     * @param {?} items\n     * @param {?} newPath\n     * @return {?}\n     */\n    ServerFilesystemProviderService.prototype.MoveMultiple = /**\n     * @param {?} items\n     * @param {?} newPath\n     * @return {?}\n     */\n    function (items, newPath) {\n        /** @type {?} */\n        var req = __assign({}, this.makeBaseRequest('move'), { items: items, newPath: newPath });\n        return this.fetchPostAuth(this.apiEndpoint, req);\n    };\n    /**\n     * @param {?} items\n     * @param {?} newPath\n     * @return {?}\n     */\n    ServerFilesystemProviderService.prototype.CopyMultiple = /**\n     * @param {?} items\n     * @param {?} newPath\n     * @return {?}\n     */\n    function (items, newPath) {\n        /** @type {?} */\n        var req = __assign({}, this.makeBaseRequest('copy'), { items: items, newPath: newPath });\n        return this.fetchPostAuth(this.apiEndpoint, req);\n    };\n    /**\n     * @param {?} items\n     * @param {?} role\n     * @param {?} entity\n     * @param {?=} recursive\n     * @return {?}\n     */\n    ServerFilesystemProviderService.prototype.SetPermissionsMultiple = /**\n     * @param {?} items\n     * @param {?} role\n     * @param {?} entity\n     * @param {?=} recursive\n     * @return {?}\n     */\n    function (items, role, entity, recursive) {\n        /** @type {?} */\n        var req = __assign({}, this.makeBaseRequest('changePermissions'), { items: items, role: role, entity: entity, recursive: recursive });\n        return this.fetchPostAuth(this.apiEndpoint, req);\n    };\n    /**\n     * @param {?} items\n     * @return {?}\n     */\n    ServerFilesystemProviderService.prototype.Remove = /**\n     * @param {?} items\n     * @return {?}\n     */\n    function (items) {\n        /** @type {?} */\n        var req = __assign({}, this.makeBaseRequest('remove'), { items: items });\n        return this.fetchPostAuth(this.apiEndpoint, req);\n    };\n    /**\n     * @param {?} currentPath\n     * @return {?}\n     */\n    ServerFilesystemProviderService.prototype.GetUploadApiUrl = /**\n     * @param {?} currentPath\n     * @return {?}\n     */\n    function (currentPath) {\n        /** @type {?} */\n        var uploadApiEndpoint = this.apiEndpoint +\n            '/upload?' +\n            'bucketname=' +\n            this.bucketname +\n            '&directoryPath=' +\n            currentPath;\n        return uploadApiEndpoint;\n    };\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    ServerFilesystemProviderService.prototype.CreateDownloadLink = /**\n     * @param {?} file\n     * @return {?}\n     */\n    function (file) {\n        return __awaiter(this, void 0, void 0, function () {\n            var req, response, url, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        req = __assign({}, this.makeBaseRequest('getMeta'), { item: file.fullPath });\n                        return [4 /*yield*/, this.fetchPostAuth(this.apiEndpoint, req)];\n                    case 1:\n                        response = _a.sent();\n                        url = response.result.url;\n                        return [2 /*return*/, url];\n                    case 2:\n                        error_2 = _a.sent();\n                        throw new Error(error_2.message);\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ServerFilesystemProviderService.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    ServerFilesystemProviderService.ctorParameters = function () { return [\n        { type: HttpClient },\n        { type: LoggerService },\n        { type: NotificationService }\n    ]; };\n    return ServerFilesystemProviderService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar AppFileTableComponent = /** @class */ (function () {\n    function AppFileTableComponent() {\n        this.clickedDownload = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    AppFileTableComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this.setExplorerHeight('650px');\n    };\n    /**\n     * @param {?} heightVal\n     * @return {?}\n     */\n    AppFileTableComponent.prototype.setExplorerHeight = /**\n     * @param {?} heightVal\n     * @return {?}\n     */\n    function (heightVal) {\n        /** @type {?} */\n        var tableEl = document.getElementById('main-table');\n        if (tableEl) {\n            /** @type {?} */\n            var containerDiv = (/** @type {?} */ (tableEl.children.item(0)));\n            containerDiv.style.height = heightVal;\n        }\n    };\n    AppFileTableComponent.decorators = [\n        { type: Component, args: [{\n                    // tslint:disable-next-line:component-selector\n                    selector: 'app-file-table',\n                    template: \"\\n    <ngx-auto-table\\n      [config]=\\\"config\\\"\\n      [columnDefinitions]=\\\"{\\n        icon: { template: iconTemplate },\\n        name: { template: nameTemplate, forceWrap: true },\\n        date: { template: dateTemplate }\\n      }\\\"\\n      id=\\\"main-table\\\"\\n    >\\n      <ng-template #iconTemplate let-row>\\n        <img class=\\\"icon\\\" [src]=\\\"row.icon\\\" matTooltip=\\\"Click For Details\\\" />\\n      </ng-template>\\n      <ng-template #nameTemplate let-row>\\n        <div class=\\\"break-word\\\" matTooltip=\\\"Click For Details\\\">\\n          {{ row.name }}\\n        </div>\\n      </ng-template>\\n      <ng-template #sizeTemplate let-row>\\n        <div matTooltip=\\\"Click For Details\\\">\\n          {{ row.size | fileSize }}\\n        </div>\\n      </ng-template>\\n      <ng-template #dateTemplate let-row>\\n        <div matTooltip=\\\"Click For Details\\\">\\n          {{ row.date | date: 'short' }}\\n        </div>\\n      </ng-template>\\n      <ng-template #actionsTemplate let-row>\\n        <button\\n          mat-mini-fab\\n          color=\\\"primary\\\"\\n          (click)=\\\"this.clickedDownload.emit(row)\\\"\\n        >\\n          <mat-icon>launch</mat-icon>\\n        </button>\\n      </ng-template>\\n    </ngx-auto-table>\\n  \",\n                    styles: [\"\\n      .icon {\\n        height: 35px;\\n      }\\n      .break-word {\\n        overflow-wrap: break-word;\\n        word-break: break-all;\\n      }\\n    \"]\n                }] }\n    ];\n    AppFileTableComponent.propDecorators = {\n        config: [{ type: Input }],\n        clickedDownload: [{ type: Output }]\n    };\n    return AppFileTableComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} virtualRoot\n * @return {?}\n */\nfunction MakeRootCrumb(virtualRoot) {\n    return {\n        label: 'Root',\n        path: virtualRoot,\n        virtualPath: '/'\n    };\n}\n/** @type {?} */\nvar MakeCrumbs = (/**\n * @param {?} virtualRoot\n * @param {?} absolutePath\n * @return {?}\n */\nfunction (virtualRoot, absolutePath) {\n    /** @type {?} */\n    var virtualRootParsed = EnsureAbsoluteDirectory(virtualRoot);\n    /** @type {?} */\n    var absolutePathParsed = EnsureAbsoluteDirectory(absolutePath);\n    if (absolutePathParsed.indexOf(virtualRootParsed) !== 0) {\n        throw new Error('Absolute path is not within the virtualRoot');\n    }\n    if (absolutePathParsed === virtualRootParsed) {\n        return [MakeRootCrumb(virtualRootParsed)];\n    }\n    /** @type {?} */\n    var relativeVirtualRoot = absolutePathParsed.slice(virtualRootParsed.length);\n    /** @type {?} */\n    var crumbs = [];\n    relativeVirtualRoot\n        .split('/')\n        .filter((/**\n     * @param {?} p\n     * @return {?}\n     */\n    function (p) { return !!p; }))\n        .reduce((/**\n     * @param {?} currentPath\n     * @param {?} curr\n     * @return {?}\n     */\n    function (currentPath, curr) {\n        /** @type {?} */\n        var dirname$$1 = basename(currentPath);\n        /** @type {?} */\n        var crumb = {\n            label: dirname$$1,\n            path: EnsureAbsoluteDirectory(virtualRootParsed + currentPath),\n            virtualPath: EnsureAbsoluteDirectory(currentPath)\n        };\n        crumbs.unshift(crumb);\n        /** @type {?} */\n        var parentPath = dirname(currentPath);\n        return parentPath;\n    }), relativeVirtualRoot);\n    crumbs.unshift(MakeRootCrumb(virtualRootParsed));\n    return crumbs;\n});\n/** @type {?} */\nvar crumbFactory = {\n    MakeCrumbs: MakeCrumbs\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar AppBreadCrumbsComponent = /** @class */ (function () {\n    function AppBreadCrumbsComponent(logger) {\n        this.logger = logger;\n        this.clickedCrumb = new EventEmitter();\n    }\n    Object.defineProperty(AppBreadCrumbsComponent.prototype, \"currentPath\", {\n        set: /**\n         * @param {?} newPath\n         * @return {?}\n         */\n        function (newPath) {\n            this._currentPath = newPath;\n            this.makeCrumbs(newPath);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AppBreadCrumbsComponent.prototype, \"config\", {\n        set: /**\n         * @param {?} newConfig\n         * @return {?}\n         */\n        function (newConfig) {\n            this._config = newConfig;\n            this.makeCrumbs(this._currentPath);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @private\n     * @param {?} newPath\n     * @return {?}\n     */\n    AppBreadCrumbsComponent.prototype.makeCrumbs = /**\n     * @private\n     * @param {?} newPath\n     * @return {?}\n     */\n    function (newPath) {\n        if (!this._config) {\n            return;\n        }\n        /** @type {?} */\n        var virtualRoot = this._config.virtualRoot;\n        this.crumbs = crumbFactory.MakeCrumbs(virtualRoot, newPath);\n        this.logger.info('makeCrumbs', {\n            crumbs: this.crumbs,\n            virtualRoot: virtualRoot,\n            newPath: newPath\n        });\n    };\n    /**\n     * @param {?} crumb\n     * @return {?}\n     */\n    AppBreadCrumbsComponent.prototype.onClickCrumb = /**\n     * @param {?} crumb\n     * @return {?}\n     */\n    function (crumb) {\n        this.logger.info('onClickCrumb', { crumb: crumb });\n        this.clickedCrumb.emit(crumb.path);\n    };\n    AppBreadCrumbsComponent.decorators = [\n        { type: Component, args: [{\n                    // tslint:disable-next-line:component-selector\n                    selector: 'bread-crumbs',\n                    template: \"\\n    <div class=\\\"flex-row align-center\\\">\\n      <div\\n        class=\\\"flex-row align-center\\\"\\n        *ngFor=\\\"let crumb of crumbs; let first = first; let last = last\\\"\\n      >\\n        <div class=\\\"divider\\\" *ngIf=\\\"!first\\\">\\n          >\\n        </div>\\n        <button\\n          #myButton\\n          class=\\\"crumb\\\"\\n          mat-raised-button\\n          color=\\\"secondary\\\"\\n          [disabled]=\\\"last\\\"\\n          (click)=\\\"onClickCrumb(crumb); myButton.disabled = true\\\"\\n        >\\n          {{ crumb.label }}\\n        </button>\\n      </div>\\n    </div>\\n  \",\n                    styles: [\".is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.fit-content{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    AppBreadCrumbsComponent.ctorParameters = function () { return [\n        { type: LoggerService }\n    ]; };\n    AppBreadCrumbsComponent.propDecorators = {\n        clickedCrumb: [{ type: Output }],\n        currentPath: [{ type: Input }],\n        config: [{ type: Input }]\n    };\n    return AppBreadCrumbsComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar AppBulkActionsComponent = /** @class */ (function () {\n    function AppBulkActionsComponent() {\n        this.clickedCancelBulk = new EventEmitter();\n        this.clickedBulkCopy = new EventEmitter();\n        this.clickedBulkMove = new EventEmitter();\n        this.clickedBulkPermissions = new EventEmitter();\n        this.clickedBulkDelete = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    AppBulkActionsComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.bulkActions = [\n            {\n                label: 'Cancel',\n                icon: 'clear',\n                onClick: (/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                function (item) {\n                    _this.clickedCancelBulk.emit();\n                }),\n                color: 'secondary'\n            },\n            {\n                label: 'Copy',\n                icon: 'content_copy',\n                onClick: (/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                function (item) {\n                    _this.clickedBulkCopy.emit();\n                }),\n                color: 'secondary'\n            },\n            {\n                label: 'Move',\n                icon: 'forward',\n                onClick: (/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                function (item) {\n                    _this.clickedBulkMove.emit();\n                }),\n                color: 'secondary'\n            },\n            {\n                label: 'Set Permissions',\n                icon: 'lock_outline',\n                onClick: (/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                function (item) {\n                    _this.clickedBulkPermissions.emit();\n                }),\n                color: 'secondary'\n            },\n            {\n                label: 'Delete',\n                icon: 'delete',\n                onClick: (/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                function (item) {\n                    _this.clickedBulkDelete.emit();\n                }),\n                color: 'secondary'\n            }\n        ];\n    };\n    AppBulkActionsComponent.decorators = [\n        { type: Component, args: [{\n                    // tslint:disable-next-line:component-selector\n                    selector: 'bulk-actions',\n                    template: \"\\n    <mat-toolbar color=\\\"primary\\\">\\n      <mat-toolbar-row class=\\\"scroll-x\\\">\\n        <div class=\\\"flex-row\\\">\\n          <div *ngFor=\\\"let action of bulkActions\\\">\\n            <button\\n              class=\\\"action flex-row align-center\\\"\\n              mat-raised-button\\n              [color]=\\\"action.color\\\"\\n              (click)=\\\"action.onClick(action)\\\"\\n            >\\n              <mat-icon>{{ action.icon }}</mat-icon>\\n              {{ action.label }}\\n            </button>\\n          </div>\\n        </div>\\n      </mat-toolbar-row>\\n    </mat-toolbar>\\n  \",\n                    styles: [\"\\n      button.action {\\n        margin-right: 10px;\\n      }\\n    \", \".is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.fit-content{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}\"]\n                }] }\n    ];\n    AppBulkActionsComponent.propDecorators = {\n        bulkActions: [{ type: Input }],\n        clickedCancelBulk: [{ type: Output }],\n        clickedBulkCopy: [{ type: Output }],\n        clickedBulkMove: [{ type: Output }],\n        clickedBulkPermissions: [{ type: Output }],\n        clickedBulkDelete: [{ type: Output }]\n    };\n    return AppBulkActionsComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar AppFolderActionsComponent = /** @class */ (function () {\n    function AppFolderActionsComponent() {\n        this.clickedUpFolder = new EventEmitter();\n        this.clickedRefresh = new EventEmitter();\n        this.clickedNewFolder = new EventEmitter();\n        this.clickedUploadFiles = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    AppFolderActionsComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var $isRefreshing = new BehaviorSubject(false);\n        this.bulkActions = [\n            {\n                label: 'Back',\n                icon: 'reply',\n                onClick: (/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                function (item) {\n                    _this.clickedUpFolder.emit();\n                }),\n                color: 'secondary',\n                $disabled: this.$CurrentPathIsRoot\n            },\n            {\n                label: 'Upload Files',\n                icon: 'file_upload',\n                onClick: (/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                function (item) {\n                    _this.clickedUploadFiles.emit();\n                }),\n                color: 'secondary',\n                $disabled: of(false)\n            },\n            {\n                label: 'Refresh',\n                icon: 'refresh',\n                onClick: (/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                function (item) {\n                    $isRefreshing.next(true);\n                    setTimeout((/**\n                     * @return {?}\n                     */\n                    function () {\n                        $isRefreshing.next(false);\n                    }), 1000);\n                    _this.clickedRefresh.emit();\n                }),\n                color: 'secondary',\n                $disabled: $isRefreshing\n            },\n            {\n                label: 'New Folder',\n                icon: 'create_new_folder',\n                onClick: (/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                function (item) {\n                    _this.clickedNewFolder.emit();\n                }),\n                color: 'secondary',\n                $disabled: of(false)\n            },\n        ];\n    };\n    AppFolderActionsComponent.decorators = [\n        { type: Component, args: [{\n                    // tslint:disable-next-line:component-selector\n                    selector: 'folder-actions',\n                    template: \"\\n    <mat-toolbar>\\n      <mat-toolbar-row class=\\\"scroll-x\\\">\\n        <div *ngFor=\\\"let action of bulkActions\\\">\\n          <button\\n            class=\\\"action has-pointer\\\"\\n            mat-raised-button\\n            [color]=\\\"action.color\\\"\\n            (click)=\\\"action.onClick(action)\\\"\\n            [disabled]=\\\"action.$disabled | async\\\"\\n          >\\n            <mat-icon inline=\\\"true\\\" >{{ action.icon }}</mat-icon>\\n            {{ action.label }}\\n          </button>\\n        </div>\\n      </mat-toolbar-row>\\n    </mat-toolbar>\\n  \",\n                    styles: [\"\\n      button.action {\\n        margin-right: 10px;\\n      }\\n    \", \".is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.fit-content{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}\"]\n                }] }\n    ];\n    AppFolderActionsComponent.propDecorators = {\n        bulkActions: [{ type: Input }],\n        clickedUpFolder: [{ type: Output }],\n        clickedRefresh: [{ type: Output }],\n        clickedNewFolder: [{ type: Output }],\n        clickedUploadFiles: [{ type: Output }],\n        $CurrentPathIsRoot: [{ type: Input }]\n    };\n    return AppFolderActionsComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:component-selector\nvar BaseDialogComponent = /** @class */ (function () {\n    function BaseDialogComponent() {\n    }\n    BaseDialogComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'base-dialog',\n                    template: \"\\n    <div class=\\\"dialog-wrapper\\\">\\n      <div class=\\\"header sans-serif flex-col align-center\\\">\\n        <ng-container *ngTemplateOutlet=\\\"header\\\"> </ng-container>\\n      </div>\\n      <div class=\\\"body sans-serif flex-col align-center\\\">\\n        <ng-container *ngTemplateOutlet=\\\"body\\\"> </ng-container>\\n      </div>\\n      <div class=\\\"actions sans-serif flex-col align-center\\\">\\n        <ng-container *ngTemplateOutlet=\\\"actions\\\"> </ng-container>\\n      </div>\\n    </div>\\n  \",\n                    styles: [\"\\n      .dialog-wrapper {\\n        max-height: 80vh;\\n      }\\n      .header {\\n      }\\n      .body {\\n        overflow-y: auto;\\n        max-height: 60vh;\\n      }\\n      .actions {\\n        max-height: 200px;\\n      }\\n    \", \".is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.fit-content{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}\"]\n                }] }\n    ];\n    BaseDialogComponent.propDecorators = {\n        header: [{ type: Input }],\n        body: [{ type: Input }],\n        actions: [{ type: Input }]\n    };\n    return BaseDialogComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar AppBtnsCancelOkComponent = /** @class */ (function () {\n    function AppBtnsCancelOkComponent() {\n        this.clickedOk = new EventEmitter();\n        this.clickedCancel = new EventEmitter();\n    }\n    AppBtnsCancelOkComponent.decorators = [\n        { type: Component, args: [{\n                    // tslint:disable-next-line:component-selector\n                    selector: 'btns-cancel-ok',\n                    template: \"\\n    <div class=\\\"full-width text-center\\\">\\n      <button mat-raised-button (click)=\\\"clickedCancel.emit()\\\">\\n        <mat-icon>clear</mat-icon>\\n        Cancel\\n      </button>\\n      <button\\n        mat-raised-button\\n        color=\\\"primary\\\"\\n        (click)=\\\"clickedOk.emit()\\\"\\n        [disabled]=\\\"okDisabled\\\"\\n      >\\n        <mat-icon>{{ okIcon }}</mat-icon>\\n        {{ okLabel }}\\n      </button>\\n    </div>\\n  \",\n                    styles: [\"\\n      button {\\n        margin: 5px;\\n      }\\n    \"]\n                }] }\n    ];\n    AppBtnsCancelOkComponent.propDecorators = {\n        okDisabled: [{ type: Input }],\n        okIcon: [{ type: Input }],\n        okLabel: [{ type: Input }],\n        clickedOk: [{ type: Output }],\n        clickedCancel: [{ type: Output }]\n    };\n    return AppBtnsCancelOkComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar AppFileTableMiniFolderBrowserComponent = /** @class */ (function () {\n    function AppFileTableMiniFolderBrowserComponent(actionHandlers, logger) {\n        this.actionHandlers = actionHandlers;\n        this.logger = logger;\n        this.selectedDirectory = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    AppFileTableMiniFolderBrowserComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.actionHandlers.init(this.serverFilesystem, null);\n        this.tableConfig = {\n            data$: this.actionHandlers.$FilesWithIcons,\n            onSelectItemDoubleClick: (/**\n             * @param {?} item\n             * @return {?}\n             */\n            function (item) { return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            this.logger.info('onSelectItemDoubleClick!', { item: item });\n                            if (!(item.type === 'dir')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, this.actionHandlers.OnNavigateTo(item.fullPath)];\n                        case 1:\n                            _a.sent();\n                            _a.label = 2;\n                        case 2: return [2 /*return*/];\n                    }\n                });\n            }); }),\n            onSelectItem: (/**\n             * @param {?} item\n             * @return {?}\n             */\n            function (item) {\n                if (item.type === 'dir') {\n                    _this.selectedDirectory.emit(item.fullPath);\n                }\n            })\n        };\n        this.tableConfig.hideFilter = true;\n        this.tableConfig.hideChooseColumns = true;\n        this.actionHandlers.OnNavigateTo(this.currentDirectory);\n    };\n    Object.defineProperty(AppFileTableMiniFolderBrowserComponent.prototype, \"$CurrentPathIsRoot\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.actionHandlers.$CurrentPathIsRoot;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    AppFileTableMiniFolderBrowserComponent.prototype.onUpFolder = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var selectedDirectory;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.actionHandlers.OnNavigateToParent()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.actionHandlers.GetCurrentPath()];\n                    case 2:\n                        selectedDirectory = _a.sent();\n                        this.selectedDirectory.emit(selectedDirectory);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    AppFileTableMiniFolderBrowserComponent.prototype.onNewFolder = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.logger.info('onClickNewFolder');\n                return [2 /*return*/, this.actionHandlers.OnNewFolderInCurrentDirectory()];\n            });\n        });\n    };\n    AppFileTableMiniFolderBrowserComponent.decorators = [\n        { type: Component, args: [{\n                    // tslint:disable-next-line:component-selector\n                    selector: 'app-file-table-mini-folder-browser',\n                    template: \"\\n    <actions-mini-browser\\n      (clickedUpFolder)=\\\"onUpFolder()\\\"\\n      (clickedNewFolder)=\\\"onNewFolder()\\\"\\n      [$CurrentPathIsRoot]=\\\"$CurrentPathIsRoot\\\"\\n    >\\n    </actions-mini-browser>\\n    <ngx-auto-table\\n      [config]=\\\"tableConfig\\\"\\n      [columnDefinitions]=\\\"{\\n        icon: { template: iconTemplate },\\n        name: { template: nameTemplate, forceWrap: true },\\n        date: { template: dateTemplate }\\n      }\\\"\\n    >\\n      <ng-template #iconTemplate let-row>\\n        <img\\n          class=\\\"icon\\\"\\n          [class.greyed]=\\\"row.type === 'file'\\\"\\n          [src]=\\\"row.icon\\\"\\n          matTooltip=\\\"Click For Details\\\"\\n        />\\n      </ng-template>\\n      <ng-template #nameTemplate let-row>\\n        <div class=\\\"break-word\\\" matTooltip=\\\"Click For Details\\\">\\n          {{ row.name }}\\n        </div>\\n      </ng-template>\\n      <ng-template #sizeTemplate let-row>\\n        <div matTooltip=\\\"Click For Details\\\">\\n          {{ row.size | fileSize }}\\n        </div>\\n      </ng-template>\\n      <ng-template #dateTemplate let-row>\\n        <div matTooltip=\\\"Click For Details\\\">\\n          {{ row.date | date: 'short' }}\\n        </div>\\n      </ng-template>\\n    </ngx-auto-table>\\n  \",\n                    providers: [\n                        ActionHandlersService,\n                        ClientFileSystemService,\n                        OptimisticFilesystemService\n                    ],\n                    styles: [\"\\n      .icon {\\n        height: 35px;\\n      }\\n      .break-word {\\n        overflow-wrap: break-word;\\n        word-break: break-all;\\n      }\\n      .greyed {\\n        filter: grayscale(1);\\n      }\\n    \"]\n                }] }\n    ];\n    /** @nocollapse */\n    AppFileTableMiniFolderBrowserComponent.ctorParameters = function () { return [\n        { type: ActionHandlersService },\n        { type: LoggerService }\n    ]; };\n    AppFileTableMiniFolderBrowserComponent.propDecorators = {\n        serverFilesystem: [{ type: Input }],\n        currentDirectory: [{ type: Input }],\n        config: [{ type: Input }],\n        selectedDirectory: [{ type: Output }]\n    };\n    return AppFileTableMiniFolderBrowserComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar AppActionsMiniBrowserComponent = /** @class */ (function () {\n    function AppActionsMiniBrowserComponent() {\n        this.clickedUpFolder = new EventEmitter();\n        this.clickedNewFolder = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    AppActionsMiniBrowserComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.bulkActions = [\n            {\n                label: 'Back',\n                icon: 'reply',\n                onClick: (/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                function (item) {\n                    _this.clickedUpFolder.emit();\n                }),\n                color: 'secondary',\n                $disabled: this.$CurrentPathIsRoot\n            },\n            {\n                label: 'New Folder',\n                icon: 'create_new_folder',\n                onClick: (/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                function (item) {\n                    _this.clickedNewFolder.emit();\n                }),\n                color: 'secondary',\n                $disabled: of(false)\n            }\n        ];\n    };\n    AppActionsMiniBrowserComponent.decorators = [\n        { type: Component, args: [{\n                    // tslint:disable-next-line:component-selector\n                    selector: 'actions-mini-browser',\n                    template: \"\\n    <mat-toolbar>\\n      <mat-toolbar-row class=\\\"scroll-x\\\">\\n        <div *ngFor=\\\"let action of bulkActions\\\">\\n          <button\\n            class=\\\"action has-pointer\\\"\\n            mat-raised-button\\n            [color]=\\\"action.color\\\"\\n            (click)=\\\"action.onClick(action)\\\"\\n            [disabled]=\\\"action.$disabled | async\\\"\\n          >\\n            <mat-icon inline=\\\"true\\\">{{ action.icon }}</mat-icon>\\n            {{ action.label }}\\n          </button>\\n        </div>\\n      </mat-toolbar-row>\\n    </mat-toolbar>\\n  \",\n                    styles: [\"\\n      button.action {\\n        margin-right: 10px;\\n      }\\n    \", \".is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.fit-content{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}\"]\n                }] }\n    ];\n    AppActionsMiniBrowserComponent.propDecorators = {\n        bulkActions: [{ type: Input }],\n        clickedUpFolder: [{ type: Output }],\n        clickedNewFolder: [{ type: Output }],\n        $CurrentPathIsRoot: [{ type: Input }]\n    };\n    return AppActionsMiniBrowserComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar dialogComponents = [\n    BaseDialogComponent,\n    AppDialogRenameComponent,\n    AppDialogNewFolderComponent,\n    AppDialogSetPermissionsComponent,\n    AppDialogCopyComponent,\n    AppDialogUploadFilesComponent\n];\nvar NgxFilemanagerClientFirebaseModule = /** @class */ (function () {\n    function NgxFilemanagerClientFirebaseModule() {\n    }\n    NgxFilemanagerClientFirebaseModule.decorators = [\n        { type: NgModule, args: [{\n                    entryComponents: __spread(dialogComponents),\n                    declarations: __spread(dialogComponents, [\n                        NgxFileManagerComponent,\n                        AppFileTableComponent,\n                        AppFileTableMiniFolderBrowserComponent,\n                        AppBreadCrumbsComponent,\n                        AppActionsMiniBrowserComponent,\n                        AppBulkActionsComponent,\n                        AppFolderActionsComponent,\n                        AppBtnsCancelOkComponent,\n                        FileDetailsComponent,\n                        FileSizePipe\n                    ]),\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        HttpClientModule,\n                        ReactiveFormsModule,\n                        AutoTableModule,\n                        DropzoneModule,\n                        MatAutocompleteModule,\n                        MatButtonModule,\n                        MatButtonToggleModule,\n                        MatCheckboxModule,\n                        MatCardModule,\n                        MatDialogModule,\n                        MatFormFieldModule,\n                        MatIconModule,\n                        MatInputModule,\n                        MatMenuModule,\n                        MatPaginatorModule,\n                        MatProgressBarModule,\n                        MatProgressSpinnerModule,\n                        MatSelectModule,\n                        MatSidenavModule,\n                        MatSnackBarModule,\n                        MatSortModule,\n                        MatTableModule,\n                        MatTabsModule,\n                        MatToolbarModule,\n                        MatTooltipModule\n                    ],\n                    exports: [NgxFileManagerComponent],\n                    providers: [\n                        ServerFilesystemProviderService,\n                        NotificationService,\n                        // OptimisticFilesystemService,\n                        { provide: LoggerService, useClass: ConsoleLoggerService }\n                    ]\n                },] }\n    ];\n    return NgxFilemanagerClientFirebaseModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NgxFileManagerComponent, NgxFilemanagerClientFirebaseModule, ServerFilesystemProviderService, AppBulkActionsComponent as ɵp, AppFolderActionsComponent as ɵq, AppBreadCrumbsComponent as ɵn, BaseDialogComponent as ɵf, AppBtnsCancelOkComponent as ɵr, AppDialogCopyComponent as ɵj, AppDialogNewFolderComponent as ɵh, AppDialogRenameComponent as ɵg, AppDialogSetPermissionsComponent as ɵi, AppDialogUploadFilesComponent as ɵk, FileDetailsComponent as ɵs, ActionHandlersService as ɵa, AppActionsMiniBrowserComponent as ɵo, AppFileTableMiniFolderBrowserComponent as ɵm, AppFileTableComponent as ɵl, ClientFileSystemService as ɵb, OptimisticFilesystemService as ɵd, ConsoleLoggerService as ɵu, LoggerService as ɵc, NotificationService as ɵe, FileSizePipe as ɵt };\n\n//# sourceMappingURL=ngx-filemanager-client-firebase.js.map","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppTestFunctionsRemoteComponent } from './test-functions-remote.component';\nimport { AppTestFunctionsLocallyComponent } from './test-functions-locally.component';\nimport { AppTestStubFilesystemComponent } from './test-stub-filesystem.component';\n\nconst routes: Routes = [\n  {\n    path: 'test-functions-locally',\n    component: AppTestFunctionsLocallyComponent\n  },\n  {\n    path: 'test-functions-remote',\n    component: AppTestFunctionsRemoteComponent\n  },\n  {\n    path: 'test-stub-filesystem',\n    component: AppTestStubFilesystemComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div style=\"text-align:center\">\n      <a [routerLink]=\"['/']\"> Test App for NgxFilemanager </a>\n    </div>\n\n    <ol>\n      <li>\n        <a [routerLink]=\"['/test-functions-locally']\"> Test functions locally </a>\n      </li>\n      <li>\n        <a [routerLink]=\"['/test-functions-remote']\"> Test functions remote </a>\n      </li>\n      <li>\n        <a [routerLink]=\"['/test-stub-filesystem']\"> Test stub filesystem </a>\n      </li>\n    </ol>\n\n    <router-outlet></router-outlet>\n  `\n})\nexport class AppComponent implements OnInit {\n  ngOnInit() {}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CommonModule } from '@angular/common';\nimport {\n  MatFormFieldModule,\n  MatInputModule,\n  MatCardModule\n} from '@angular/material';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxFilemanagerClientFirebaseModule } from 'ngx-filemanager-client-firebase';\nimport { AppTestFunctionsLocallyComponent } from './test-functions-locally.component';\nimport { AppTestStubFilesystemComponent } from './test-stub-filesystem.component';\nimport { AppTestFunctionsRemoteComponent } from './test-functions-remote.component';\nimport { AppPermissionsSelectionComponent } from './permissions-selection.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppPermissionsSelectionComponent,\n    AppTestFunctionsLocallyComponent,\n    AppTestFunctionsRemoteComponent,\n    AppTestStubFilesystemComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    AppRoutingModule,\n    NgxFilemanagerClientFirebaseModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import * as core from 'ngx-filemanager-core/public_api';\nimport * as path from 'path-browserify';\nimport { ConsoleLoggerService } from './logger';\n\nfunction MakeItem(filePath: string): core.ResFile {\n  const isDir = filePath.endsWith('/');\n  return {\n    name: isDir ? path.basename(filePath) : filePath,\n    fullPath: filePath,\n    rightsFirebase: [],\n    permissions: {} as any,\n    size: '111',\n    date: new Date().toISOString(),\n    type: isDir ? 'dir' : 'file'\n  };\n}\n\nexport class FileSystemStub implements core.FileSystemProvider {\n  logger = new ConsoleLoggerService();\n\n  files: core.ResFile[] = [\n    MakeItem('/image1.png'),\n    MakeItem('/image2.jpeg'),\n    MakeItem('/subfile.txt'),\n    MakeItem('/subfile.mp3'),\n    MakeItem('/subfile.mp4'),\n    MakeItem('/tables.csv'),\n    MakeItem('/time.docx'),\n    MakeItem('/emptyFolder/'),\n    MakeItem('/subfolder/'),\n    MakeItem('/subfolder/file.txt'),\n\n    MakeItem('/subfolder/sub1/'),\n    MakeItem('/subfolder/sub1/file.txt'),\n    MakeItem('/subfolder/sub1/sub1/'),\n    MakeItem('/subfolder/sub1/sub1/file.txt'),\n    MakeItem('/subfolder/sub1/sub1/sub1/'),\n    MakeItem('/subfolder/sub1/sub1/sub1/file.txt'),\n    MakeItem('/subfolder/sub1/sub2/'),\n    MakeItem('/subfolder/sub1/sub2/file.txt'),\n    MakeItem('/subfolder/sub1/sub2/sub1/'),\n    MakeItem('/subfolder/sub1/sub2/sub1/file.txt'),\n\n    MakeItem('/subfolder/sub2/'),\n    MakeItem('/subfolder/sub2/file.txt'),\n    MakeItem('/subfolder/sub2/sub1/'),\n    MakeItem('/subfolder/sub2/sub1/file.txt'),\n    MakeItem('/subfolder/sub2/sub1/sub1/'),\n    MakeItem('/subfolder/sub2/sub1/sub1/file.txt'),\n    MakeItem('/subfolder/sub2/sub2/'),\n    MakeItem('/subfolder/sub2/sub2/file.txt'),\n    MakeItem('/subfolder/sub2/sub2/sub1/'),\n    MakeItem('/subfolder/sub2/sub2/sub1/file.txt'),\n  ];\n\n  private async fakeDelay() {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, 2000);\n    });\n  }\n  private selectMatches(items: string[], isMatch: boolean) {\n    const itemsSet = new Set(items);\n    if (isMatch) {\n      return this.files.filter(f => itemsSet.has(f.fullPath));\n    } else {\n      return this.files.filter(f => !itemsSet.has(f.fullPath));\n    }\n  }\n  private isInDirectory(dirPath, filePath): boolean {\n    try {\n      const relative = path.relative(dirPath, filePath);\n      const isSubdir =\n        relative && !relative.startsWith('..') && !relative.includes('/');\n      return isSubdir;\n    } catch (error) {\n      this.logger.warn('isInDirectory error', { dirPath, filePath, error });\n      return false;\n    }\n  }\n\n  async List(inputPath: string): Promise<core.ResBodyList> {\n    await this.fakeDelay();\n    const folderPath = this.ensurePrefixSlash(\n      this.ensureTrailingSlash(inputPath)\n    );\n    const matches = this.files.filter(k =>\n      this.isInDirectory(folderPath, k.fullPath)\n    );\n    this.logger.info('List', { folderPath, files: this.files, matches });\n    return {\n      result: matches\n    };\n  }\n  async Rename(item: string, newItemPath: string): Promise<core.ResBodyRename> {\n    await this.fakeDelay();\n    const baseName = path.basename(newItemPath);\n    this.selectMatches([item], true).map(match => {\n      match.name = baseName;\n      match.fullPath = newItemPath;\n    });\n    return null;\n  }\n  async Move(item: string, newPath: string): Promise<core.ResBodyMove> {\n    await this.fakeDelay();\n    this.selectMatches([item], true).map(match => {\n      match.fullPath = newPath;\n    });\n    return null;\n  }\n  async Copy(\n    singleFileName: string,\n    newPath: string\n  ): Promise<core.ResBodyCopy> {\n    await this.fakeDelay();\n    this.selectMatches([singleFileName], true).map(match => {\n      const copy = { ...match };\n      copy.fullPath = newPath;\n      this.files.push(copy);\n    });\n    return null;\n  }\n  async Edit(item: string, content: string): Promise<core.ResBodyEdit> {\n    await this.fakeDelay();\n    this.selectMatches([item], true).map(match => {\n      match['content'] = content;\n    });\n    return null;\n  }\n  async Getcontent(item: string): Promise<core.ResBodyGetContent> {\n    await this.fakeDelay();\n    const matches = this.selectMatches([item], true);\n    return matches.pop()['content'];\n  }\n  async CreateFolder(newPath: string): Promise<core.ResBodyCreateFolder> {\n    await this.fakeDelay();\n    const parsed = newPath.endsWith('/') ? newPath : newPath + '/';\n    this.files.push(MakeItem(parsed));\n    return null;\n  }\n  async SetPermissions(\n    item: string,\n    role: core.PermisionsRole,\n    entity: core.PermissionEntity,\n    recursive?: boolean\n  ): Promise<core.ResBodySetPermissions> {\n    await this.fakeDelay();\n    this.selectMatches([item], true).map(f => {\n      // f.rightsFirebase = [perms];\n      if (recursive) {\n        // this.SetPermissions(f.fullPath, perms, permsCode, recursive);\n      }\n    });\n    return null;\n  }\n  async CopyMultiple(\n    items: string[],\n    newPath: string\n  ): Promise<core.ResBodyCopy> {\n    await this.fakeDelay();\n    this.selectMatches(items, true).map(f => {\n      const copy = { ...f };\n      copy.fullPath = path.join(newPath, f.name);\n      this.files.push(copy);\n    });\n    return null;\n  }\n  async MoveMultiple(\n    items: string[],\n    newPath: string\n  ): Promise<core.ResBodyMove> {\n    await this.fakeDelay();\n    this.selectMatches(items, true).map(f => {\n      f.fullPath = path.join(newPath, f.name);\n    });\n    return null;\n  }\n  async SetPermissionsMultiple(\n    items: string[],\n    role: core.PermisionsRole,\n    entity: core.PermissionEntity,\n    recursive?: boolean\n  ): Promise<core.ResBodySetPermissions> {\n    await this.fakeDelay();\n    this.logger.info('file-system-stub: SetPermissionsMultiple', {\n      items,\n      files: this.files\n    });\n    this.selectMatches(items, true).map(f => {\n      // f.rightsFirebase = [perms];\n      // if (recursive) {\n      //   this.SetPermissions(f.fullPath, perms, permsCode, recursive);\n      // }\n    });\n    return null;\n  }\n\n  async Remove(items: string[]): Promise<core.ResBodyRemove> {\n    await this.fakeDelay();\n    const itemsSet = new Set(items);\n    const itemsNotDeleted = this.files.filter(f => !itemsSet.has(f.fullPath));\n    this.files = itemsNotDeleted;\n    return null;\n  }\n\n  private ensureTrailingSlash(inputPath: string) {\n    const hasTrailing = inputPath.slice(-1) === '/';\n    if (hasTrailing) {\n      return inputPath;\n    }\n    return inputPath + '/';\n  }\n  private ensurePrefixSlash(inputPath: string) {\n    const hasPrefix = inputPath.slice(0, 1) === '/';\n    if (hasPrefix) {\n      return inputPath;\n    }\n    return '/' + inputPath;\n  }\n\n  GetUploadApiUrl(currentPath: string): string {\n    return 'https://httpbin.org/post';\n  }\n\n  async CreateDownloadLink(file: core.ResFile): Promise<string> {\n    return 'https://upload.wikimedia.org/wikipedia/commons/8/85/Exponential_Function_%28Abs_Imag_Part_at_Infinity%29_Density.png';\n  }\n}\n","export class ConsoleLoggerService {\r\n  get info() {\r\n    const boundLogFn = console.log.bind(console, 'demo app:: ');\r\n    return boundLogFn;\r\n  }\r\n\r\n  get warn() {\r\n    const boundLogFn = console.warn.bind(console, 'demo app:: ');\r\n    return boundLogFn;\r\n  }\r\n\r\n  get error() {\r\n    const boundLogFn = console.error.bind(console, 'demo app:: ');\r\n    return boundLogFn;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-permissions-selection',\n  template: `\n  <div>\n\n  </div>\n  `\n})\nexport class AppPermissionsSelectionComponent {\n\n}\n","import { Component } from '@angular/core';\nimport {\n  FileManagerConfig,\n  ServerFilesystemProviderService,\n} from 'ngx-filemanager-client-firebase';\nimport { $users, $groups } from './users-factory';\n\n\n@Component({\n  selector: 'app-test-page',\n  template: `\n    <h2>File Explorer</h2>\n    <div>\n      <ngx-filemanager [fileSystem]=\"firebaseClientProvider\" [config]=\"config\">\n      </ngx-filemanager>\n    </div>\n  `\n})\nexport class AppTestFunctionsLocallyComponent {\n  public config: FileManagerConfig = {\n    virtualRoot: '/clientTesting/',\n    users: $users,\n    groups: $groups\n  };\n  constructor(public firebaseClientProvider: ServerFilesystemProviderService) {\n    const bucketName = 'resvu-integration-tests.appspot.com';\n    const apiEndpoint = 'http://localhost:4444/ApiPublic/files';\n    // const bucketName = 'cl-building-storage';\n    // const apiEndpoint =\n    //   'http://localhost:8010/communitilink-r3/us-central1/ApiPublic/files';\n    this.firebaseClientProvider.Initialize(bucketName, apiEndpoint);\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport {\n  FileManagerConfig,\n  ServerFilesystemProviderService\n} from 'ngx-filemanager-client-firebase';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { $users, $groups } from './users-factory';\n\n@Component({\n  selector: 'app-test-page',\n  template: `\n    <mat-card>\n      <mat-form-field>\n        <input\n          matInput\n          placeholder=\"bucketName\"\n          type=\"text\"\n          [formControl]=\"bucketName\"\n        />\n      </mat-form-field>\n      <mat-form-field>\n        <input\n          matInput\n          placeholder=\"apiEndpoint\"\n          type=\"text\"\n          [formControl]=\"apiEndpoint\"\n        />\n      </mat-form-field>\n    </mat-card>\n\n    <h2>File Explorer</h2>\n    <div *ngIf=\"showExplorer\">\n      <ngx-filemanager [fileSystem]=\"firebaseClientProvider\" [config]=\"config\">\n      </ngx-filemanager>\n    </div>\n  `\n})\nexport class AppTestFunctionsRemoteComponent implements OnDestroy {\n  public config: FileManagerConfig = {\n    virtualRoot: '/',\n    users: $users,\n    groups: $groups\n  };\n\n  bucketName = new FormControl('my-test-bucketname');\n  apiEndpoint = new FormControl('http://localhost:4444/ApiPublic/files');\n  showExplorer = true;\n\n  destroyed = new Subject();\n\n  constructor(public firebaseClientProvider: ServerFilesystemProviderService) {\n    const bucketName = localStorage.getItem('bucketname');\n    this.bucketName.setValue(bucketName);\n    this.reInitializeExplorer();\n    this.bucketName.valueChanges\n      .pipe(\n        debounceTime(500),\n        takeUntil(this.destroyed)\n      )\n      .subscribe(() => this.reInitializeExplorer());\n    this.apiEndpoint.valueChanges\n      .pipe(\n        debounceTime(500),\n        takeUntil(this.destroyed)\n      )\n      .subscribe(() => this.reInitializeExplorer());\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next();\n  }\n\n  async reInitializeExplorer() {\n    this.showExplorer = false;\n    this.firebaseClientProvider.Initialize(\n      this.bucketName.value,\n      this.apiEndpoint.value\n    );\n    localStorage.setItem('bucketname', this.bucketName.value);\n    setTimeout(() => {\n      this.showExplorer = true;\n    }, 100);\n  }\n}\n","import { Component } from '@angular/core';\nimport { FileSystemProvider } from 'ngx-filemanager-core/public_api';\nimport { FileSystemStub } from './file-system-stub';\nimport { FileManagerConfig } from 'ngx-filemanager-client-firebase';\n\n@Component({\n  selector: 'app-test-blank',\n  template: `\n    <h2>Test Blank</h2>\n    <div>\n      <ngx-filemanager [config]=\"config\" [fileSystem]=\"blankFileSystem\">\n      </ngx-filemanager>\n    </div>\n  `\n})\nexport class AppTestStubFilesystemComponent {\n  public blankFileSystem: FileSystemProvider = new FileSystemStub();\n  public config: FileManagerConfig = {\n    virtualRoot: '/subfolder'\n  };\n}\n","import { NameUid } from 'ngx-filemanager-client-firebase';\nimport { BehaviorSubject } from 'rxjs';\nimport * as uuid from 'uuid/v1';\n\nexport function MakeUser(name) {\n  return {\n    name: name,\n    uid: uuid()\n  };\n}\n\nexport const $users = new BehaviorSubject<NameUid[]>([\n  MakeUser('Jim'),\n  MakeUser('Bob'),\n  MakeUser('Frank'),\n  MakeUser('John')\n]);\nexport const $groups = new BehaviorSubject<NameUid[]>([\n  MakeUser('Residents'),\n  MakeUser('Managers')\n]);\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}
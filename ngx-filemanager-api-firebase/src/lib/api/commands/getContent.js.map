{"version":3,"file":"getContent.js","sourceRoot":"","sources":["../../../../../../../projects/ngx-filemanager-api-firebase/src/lib/api/commands/getContent.ts"],"names":[],"mappings":";;;AACA,uEAAkE;AAElE,iCAAgC;AAEhC,SAAsB,cAAc,CAClC,MAAc,EACd,IAAY,EACZ,MAAwB;;;;;;;oBAGP,qBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAA;;oBAAtC,MAAM,GAAG,SAA6B;oBACtC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;oBACP,qBAAM,qCAAe,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,EAAA;;oBAAxD,OAAO,GAAG,SAA8C;oBAC9D,sBAAO,OAAO,EAAC;;;oBAEf,MAAM,IAAI,eAAM,CAAC,OAAK,CAAC,CAAC;;;;;CAE3B;AAbD,wCAaC","sourcesContent":["import { Bucket } from '../../types/google-cloud-types';\r\nimport { StreamToPromise } from '../../utils/translation-helpers';\r\nimport { UserCustomClaims } from 'ngx-filemanager-core/public_api';\r\nimport { VError } from 'verror';\r\n\r\nexport async function GetFileContent(\r\n  bucket: Bucket,\r\n  item: string,\r\n  claims: UserCustomClaims\r\n) {\r\n  try {\r\n    const result = await bucket.file(item).get();\r\n    const file = result[0];\r\n    const content = await StreamToPromise(file.createReadStream());\r\n    return content;\r\n  } catch (error) {\r\n    throw new VError(error);\r\n  }\r\n}\r\n"]}
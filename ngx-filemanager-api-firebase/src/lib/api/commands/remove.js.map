{"version":3,"file":"remove.js","sourceRoot":"","sources":["../../../../../../../projects/ngx-filemanager-api-firebase/src/lib/api/commands/remove.ts"],"names":[],"mappings":";;;AACA,yDAA+D;AAC/D,6DAAsE;AAEtE,iCAAgC;AAEhC,SAAsB,aAAa,CAAC,IAAU;;;;;;;oBAEzB,qBAAM,IAAI,CAAC,MAAM,EAAE,EAAA;;oBAA7B,MAAM,GAAI,CAAA,SAAmB,CAAA,GAAvB;yBACT,MAAM,EAAN,wBAAM;oBACR,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC5C,qBAAM,IAAI,CAAC,MAAM,EAAE,EAAA;;oBAAnB,SAAmB,CAAC;oBACpB,sBAAO,IAAI,EAAC;wBAEd,sBAAO,KAAK,EAAC;;;oBAEb,MAAM,IAAI,eAAM,CAAC,OAAK,CAAC,CAAC;;;;;CAE3B;AAZD,sCAYC;AAED,SAAsB,sBAAsB,CAC1C,MAAc,EACd,QAAgB;;;;;;;oBAGM,qBAAM,yCAAwB,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAA;;oBAA9D,WAAW,GAAG,SAAgD;oBAC/C,qBAAM,OAAO,CAAC,GAAG,CACpC,WAAW,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,aAAa,CAAC,CAAC,CAAC,EAAhB,CAAgB,CAAC,CACvC,EAAA;;oBAFK,YAAY,GAAG,SAEpB;oBACK,YAAY,GAAG,YAAY,CAAC,MAAM,CACtC,UAAC,GAAG,EAAE,GAAG,IAAK,OAAA,CAAC,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC,EAAlB,CAAkB,EAChC,IAAI,CACL,CAAC;oBACF,sBAAO,YAAY,EAAC;;;oBAEpB,MAAM,IAAI,eAAM,CAAC,OAAK,CAAC,CAAC;;;;;CAE3B;AAjBD,wDAiBC;AAED,SAAsB,WAAW,CAC/B,MAAc,EACd,KAAe,EACf,MAAwB;;;;;;;oBAGhB,sBAAsB,GAAG,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,kCAAmB,CAAC,CAAC,CAAC,EAAtB,CAAsB,CAAC,CAAC;oBACjD,qBAAM,OAAO,CAAC,GAAG,CACpC,sBAAsB,CAAC,GAAG,CAAC,UAAA,QAAQ;4BACjC,OAAA,sBAAsB,CAAC,MAAM,EAAE,QAAQ,CAAC;wBAAxC,CAAwC,CACzC,CACF,EAAA;;oBAJK,YAAY,GAAG,SAIpB;oBACK,YAAY,GAAG,YAAY,CAAC,MAAM,CACtC,UAAC,GAAG,EAAE,GAAG,IAAK,OAAA,CAAC,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC,EAAlB,CAAkB,EAChC,IAAI,CACL,CAAC;oBACI,OAAO,GAAc;wBACzB,OAAO,EAAE,YAAY;qBACtB,CAAC;oBACF,sBAAO,OAAO,EAAC;;;oBAEf,MAAM,IAAI,eAAM,CAAC,OAAK,CAAC,CAAC;;;;;CAE3B;AAvBD,kCAuBC","sourcesContent":["import { Bucket, File } from '../../types/google-cloud-types';\r\nimport { EnsureNoPrefixSlash } from '../../utils/path-helpers';\r\nimport { GetAllChildrenWithPrefix } from '../../utils/storage-helper';\r\nimport { UserCustomClaims, ResultObj } from 'ngx-filemanager-core/public_api';\r\nimport { VError } from 'verror';\r\n\r\nexport async function tryDeleteFile(file: File): Promise<boolean> {\r\n  try {\r\n    const [exists] = await file.exists();\r\n    if (exists) {\r\n      console.log('- deleting file: ', file.name);\r\n      await file.delete();\r\n      return true;\r\n    }\r\n    return false;\r\n  } catch (error) {\r\n    throw new VError(error);\r\n  }\r\n}\r\n\r\nexport async function RemoveFileWithChildren(\r\n  bucket: Bucket,\r\n  itemPath: string\r\n): Promise<boolean> {\r\n  try {\r\n    const allChildren = await GetAllChildrenWithPrefix(bucket, itemPath);\r\n    const successArray = await Promise.all(\r\n      allChildren.map(f => tryDeleteFile(f))\r\n    );\r\n    const allSuccesses = successArray.reduce(\r\n      (acc, cur) => (acc = acc && cur),\r\n      true\r\n    );\r\n    return allSuccesses;\r\n  } catch (error) {\r\n    throw new VError(error);\r\n  }\r\n}\r\n\r\nexport async function RemoveFiles(\r\n  bucket: Bucket,\r\n  items: string[],\r\n  claims: UserCustomClaims\r\n) {\r\n  try {\r\n    const googleStorageItemPaths = items.map(p => EnsureNoPrefixSlash(p));\r\n    const successArray = await Promise.all(\r\n      googleStorageItemPaths.map(itemPath =>\r\n        RemoveFileWithChildren(bucket, itemPath)\r\n      )\r\n    );\r\n    const allSuccesses = successArray.reduce(\r\n      (acc, cur) => (acc = acc && cur),\r\n      true\r\n    );\r\n    const results: ResultObj = {\r\n      success: allSuccesses\r\n    };\r\n    return results;\r\n  } catch (error) {\r\n    throw new VError(error);\r\n  }\r\n}\r\n"]}
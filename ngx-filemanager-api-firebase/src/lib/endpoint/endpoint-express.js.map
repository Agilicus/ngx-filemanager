{"version":3,"file":"endpoint-express.js","sourceRoot":"","sources":["../../../../../../projects/ngx-filemanager-api-firebase/src/lib/endpoint/endpoint-express.ts"],"names":[],"mappings":"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","sourcesContent":["// Add middle ware to this route\r\nconst express = require('express');\r\nimport {\r\n  OptionRequestsAreOk,\r\n  PostRequestsOnly,\r\n  HasBodyProp,\r\n  HasQueryParam\r\n} from './middleware-helpers';\r\nimport { Storage } from '../types/google-cloud-types';\r\nimport { NgxFileMangerApiFireBaseClass } from '../api/firebase-storage-api';\r\nimport { VError } from 'verror';\r\n\r\nlet fmApi: NgxFileMangerApiFireBaseClass;\r\n\r\nconst endpoint = express();\r\nendpoint.use(OptionRequestsAreOk);\r\n\r\nendpoint.use('/hello', async (req, res) => {\r\n  console.log('HELLO');\r\n  res.status(200).send('HELLO\\n');\r\n});\r\n\r\nendpoint.use(PostRequestsOnly);\r\n\r\nimport { ParseUploadFile, UploadedFile } from './middleware-upload';\r\nimport { RetrieveCustomClaims } from '../utils/permissions-helper';\r\nimport {\r\n  UserCustomClaims,\r\n  FileManagerAction\r\n} from 'ngx-filemanager-core/public_api';\r\nendpoint.post(\r\n  '/upload',\r\n  HasQueryParam('bucketname'),\r\n  HasQueryParam('directoryPath'),\r\n  ParseUploadFile,\r\n  async (req, res, next) => {\r\n    const bucketname: string = req.query.bucketname;\r\n    const directoryPath: string = req.query.directoryPath;\r\n    const files = req.files as UploadedFile[];\r\n    const userClaims = await RetrieveCustomClaims(req);\r\n    try {\r\n      const results = await Promise.all(\r\n        files.map(file =>\r\n          trySaveFile(bucketname, directoryPath, file, userClaims)\r\n        )\r\n      );\r\n      const success = {\r\n        result: {\r\n          success: true\r\n        }\r\n      };\r\n      const finalResult = results.reduce((acc, cur) => {\r\n        if (cur.result.error) {\r\n          return cur;\r\n        }\r\n        return success;\r\n      }, success);\r\n      res.status(200).send(finalResult);\r\n    } catch (error) {\r\n      console.error('Error occurred while uploading: \\n', VError.fullStack(error));\r\n      res.status(400).send('Error occurred while uploading: \\n' + error.message);\r\n      return;\r\n    }\r\n  }\r\n);\r\n\r\nasync function trySaveFile(\r\n  bucketname: string,\r\n  directoryPath: string,\r\n  f: UploadedFile,\r\n  userClaims: UserCustomClaims\r\n) {\r\n  return fmApi.HandleSaveFile(\r\n    bucketname,\r\n    directoryPath,\r\n    f.originalname,\r\n    f.mimetype,\r\n    f.buffer,\r\n    userClaims\r\n  );\r\n}\r\n\r\nendpoint.use(\r\n  '/',\r\n  HasBodyProp('action'),\r\n  HasBodyProp('bucketname'),\r\n  async (req, res) => {\r\n    const action: FileManagerAction = req.body.action;\r\n    try {\r\n      const userClaims = await RetrieveCustomClaims(req);\r\n      let body;\r\n      switch (action) {\r\n        case 'list':\r\n          body = await fmApi.HandleList(req.body, userClaims);\r\n          break;\r\n        case 'rename':\r\n          body = await fmApi.HandleRename(req.body, userClaims);\r\n          break;\r\n        case 'move':\r\n          body = await fmApi.HandleMove(req.body, userClaims);\r\n          break;\r\n        case 'copy':\r\n          body = await fmApi.HandleCopy(req.body, userClaims);\r\n          break;\r\n        case 'remove':\r\n          body = await fmApi.HandleRemove(req.body, userClaims);\r\n          break;\r\n        case 'edit':\r\n          body = await fmApi.HandleEdit(req.body, userClaims);\r\n          break;\r\n        case 'getContent':\r\n          body = await fmApi.HandleGetContent(req.body, userClaims);\r\n          break;\r\n        case 'createFolder':\r\n          body = await fmApi.HandleCreateFolder(req.body, userClaims);\r\n          break;\r\n        case 'getMeta':\r\n          body = await fmApi.HandleGetMeta(req.body, userClaims);\r\n          break;\r\n        case 'changePermissions':\r\n          body = await fmApi.HandleSetPermissions(req.body, userClaims);\r\n          break;\r\n        case 'compress':\r\n        case 'extract':\r\n        case 'downloadMultiple':\r\n        default:\r\n          throw new Error('action has not been implemented');\r\n      }\r\n      res.status(200).send(body);\r\n    } catch (error) {\r\n      console.error('Error while processing request: \\n', VError.fullStack(error));\r\n      const returnedError = {\r\n        error: `Bad request to ngx-file-manager!`,\r\n        errorDetail: error.message,\r\n        requestBody: req.body\r\n      };\r\n      res.status(400).send(returnedError);\r\n    }\r\n  }\r\n);\r\nendpoint.use(notImplemented);\r\n\r\nasync function notImplemented(req, res) {\r\n  const bodyString = JSON.stringify(req.body);\r\n  res.status(501).send('That request has not been implemented: ' + bodyString);\r\n}\r\n\r\nfunction CheckStorageInitialized(storage: Storage) {\r\n  // storage.app();\r\n}\r\n/*\r\nUse by attaching to a firebase function\r\nexports.FileManagerApi = StorageEndpoint;\r\n*/\r\nexport const FileManagerEndpointExpress = (storage: Storage) => {\r\n  fmApi = new NgxFileMangerApiFireBaseClass(storage);\r\n  return endpoint;\r\n};\r\n"]}
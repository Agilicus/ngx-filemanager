{"version":3,"file":"middleware-helpers.js","sourceRoot":"","sources":["../../../../../../projects/ngx-filemanager-api-firebase/src/lib/endpoint/middleware-helpers.ts"],"names":[],"mappings":";;AAEA,SAAgB,mBAAmB,CACjC,GAAY,EACZ,GAAa,EACb,IAAkB;IAElB,IAAI,GAAG,CAAC,MAAM,KAAK,SAAS,EAAE;QAC5B,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;QACnD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACzC,OAAO;KACR;IACD,IAAI,EAAE,CAAC;AACT,CAAC;AAXD,kDAWC;AAED,SAAgB,gBAAgB,CAC9B,GAAY,EACZ,GAAa,EACb,IAAkB;IAElB,IAAI,GAAG,CAAC,MAAM,KAAK,MAAM,EAAE;QACzB,IAAM,GAAG,GAAG,oCAAoC,CAAC;QACjD,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,OAAO;KACR;IACD,IAAI,EAAE,CAAC;AACT,CAAC;AAZD,4CAYC;AAED,SAAgB,WAAW,CAAC,aAAqB;IAC/C,OAAO,UAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QACrD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;YAC5B,IAAM,GAAG,GAAG,gDAA6C,aAAa,UAAM,CAAC;YAC7E,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC1B,OAAO;SACR;QACD,IAAI,EAAE,CAAC;IACT,CAAC,CAAC;AACJ,CAAC;AAVD,kCAUC;AAED,SAAgB,aAAa,CAAC,SAAiB;IAC7C,OAAO,UAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QACrD,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;YACzB,IAAM,GAAG,GAAG,kDAA+C,SAAS,UAAM,CAAC;YAC3E,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC1B,OAAO;SACR;QACD,IAAI,EAAE,CAAC;IACT,CAAC,CAAC;AACJ,CAAC;AAVD,sCAUC","sourcesContent":["import { Request, Response, NextFunction, RequestHandler } from 'express';\n\nexport function OptionRequestsAreOk(\n  req: Request,\n  res: Response,\n  next: NextFunction\n): RequestHandler {\n  if (req.method === 'OPTIONS') {\n    console.log('Recieved OPTIONS request sending OK');\n    res.status(200).send('Options are OK\\n');\n    return;\n  }\n  next();\n}\n\nexport function PostRequestsOnly(\n  req: Request,\n  res: Response,\n  next: NextFunction\n): RequestHandler {\n  if (req.method !== 'POST') {\n    const msg = 'Only POST requests are supported\\n';\n    console.warn(msg);\n    res.status(400).send(msg);\n    return;\n  }\n  next();\n}\n\nexport function HasBodyProp(bodyFieldName: string): RequestHandler {\n  return (req: Request, res: Response, next: NextFunction) => {\n    if (!req.body[bodyFieldName]) {\n      const msg = `Request is missing property in req.body: \"${bodyFieldName}\" \\n`;\n      console.warn(msg);\n      res.status(400).send(msg);\n      return;\n    }\n    next();\n  };\n}\n\nexport function HasQueryParam(paramName: string): RequestHandler {\n  return (req: Request, res: Response, next: NextFunction) => {\n    if (!req.query[paramName]) {\n      const msg = `Request is missing property in req.params: \"${paramName}\" \\n`;\n      console.warn(msg);\n      res.status(400).send(msg);\n      return;\n    }\n    next();\n  };\n}\n"]}